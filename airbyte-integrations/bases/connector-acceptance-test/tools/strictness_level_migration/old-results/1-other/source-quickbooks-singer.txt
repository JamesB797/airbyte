../../../../connectors/source-quickbooks-singer/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-quickbooks-singer
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
collected 37 items / 35 deselected / 2 selected

../../test_input/test_core.py E                                          [ 50%]
../../test_input/test_incremental.py E                                   [100%]


==================================== ERRORS ====================================
______________ ERROR at setup of TestBasicRead.test_read[inputs0] ______________

connector_config = SecretDict(******)
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff8fd64070>
cached_schemas = {}, cache_discovered_catalog = True

    @pytest.fixture(name="discovered_catalog")
    def discovered_catalog_fixture(
        connector_config, docker_runner: ConnectorRunner, cached_schemas, cache_discovered_catalog: bool
    ) -> MutableMapping[str, AirbyteStream]:
        """JSON schemas for each stream"""
        cached_schemas = cached_schemas.setdefault(make_hashable(connector_config), {})
        if not cache_discovered_catalog:
            cached_schemas.clear()
        if not cached_schemas:
>           output = docker_runner.call_discover(config=connector_config)

connector_acceptance_test/conftest.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:91: in call_discover
    output = list(self.run(cmd=cmd, config=config, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: d88de382e4>
command = 'discover --config /data/tap_config.json', with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'discover --config /data/tap_config.json' in image '<Image: 'airbyte/source-quickbooks-singer:dev'>' returned non-zero exit status 1: Traceback (most recent call last):
E                 File "/airbyte/integration_code/main.py", line 13, in <module>
E                   launch(source, sys.argv[1:])
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py", line 117, in launch
E               {"type": "LOG", "log": {"level": "INFO", "message": "https://sandbox-quickbooks.api.intuit.com/v3/company/4620816365161012080/query - Making request to GET endpoint /v3/company/4620816365161012080/query, with params {'query': 'SELECT * FROM CompanyInfo'}"}}
E               {"type": "LOG", "log": {"level": "INFO", "message": "Error initializing QuickbooksClient during token refresh, please reauthenticate."}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "CRITICAL (invalid_grant) Token invalid"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "Traceback (most recent call last):"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\", line 477, in request"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    url, headers, data = self._client.add_token("}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 217, in add_token"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    raise TokenExpiredError()"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "oauthlib.oauth2.rfc6749.errors.TokenExpiredError: (token_expired) "}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": ""}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "During handling of the above exception, another exception occurred:"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": ""}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "Traceback (most recent call last):"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\", line 54, in __init__"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    self.get('/v3/company/{}/query'.format(self.realm_id), params={\"query\": \"SELECT * FROM CompanyInfo\"})"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\", line 120, in get"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    return self._make_request(\"GET\", url, headers=headers, params=params)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    ret = target(*args, **kwargs)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/singer/utils.py\", line 95, in wrapper"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    return func(*args, **kwargs)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\", line 106, in _make_request"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    response = self.session.request(method, full_url, headers=headers, params=params, data=data)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\", line 496, in request"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    token = self.refresh_token("}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\", line 446, in refresh_token"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    self.token = self._client.parse_request_body_response(r.text, scope=self.scope)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 427, in parse_request_body_response"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    self.token = parse_token_response(body, scope=scope)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 441, in parse_token_response"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    validate_token_parameters(params)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 448, in validate_token_parameters"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    raise_from_error(params.get('error'), params)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/errors.py\", line 399, in raise_from_error"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    raise cls(**kwargs)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "oauthlib.oauth2.rfc6749.errors.InvalidGrantError: (invalid_grant) Token invalid"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": ""}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "During handling of the above exception, another exception occurred:"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": ""}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "Traceback (most recent call last):"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/bin/tap-quickbooks\", line 33, in <module>"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    sys.exit(load_entry_point('tap-quickbooks===1.0.5-airbyte', 'console_scripts', 'tap-quickbooks')())"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/singer/utils.py\", line 229, in wrapped"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    return fnc(*args, **kwargs)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/__init__.py\", line 18, in main"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    client = QuickbooksClient(args.config_path, config)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\", line 57, in __init__"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "    raise QuickbooksAuthenticationError(e)"}}
E               {"type": "LOG", "log": {"level": "ERROR", "message": "tap_quickbooks.client.QuickbooksAuthenticationError: (invalid_grant) Token invalid"}}
E                   for message in source_entrypoint.run(parsed_args):
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py", line 102, in run
E                   catalog = self.source.discover(logger, config)
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py", line 117, in discover
E                   return self._discover_internal(logger, config_container.config_path).airbyte_catalog
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py", line 103, in _discover_internal
E                   catalogs = SingerHelper.get_catalogs(logger, cmd, self.get_sync_mode_overrides(), self.get_excluded_streams())
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/singer_helpers.py", line 157, in get_catalogs
E                   singer_catalog = json.loads(completed_process.stdout)
E                 File "/usr/local/lib/python3.9/json/__init__.py", line 346, in loads
E                   return _default_decoder.decode(s)
E                 File "/usr/local/lib/python3.9/json/decoder.py", line 337, in decode
E                   obj, end = self.raw_decode(s, idx=_w(s, 0).end())
E                 File "/usr/local/lib/python3.9/json/decoder.py", line 355, in raw_decode
E                   raise JSONDecodeError("Expecting value", s, err.value) from None
E               json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\nTraceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 117, in launch\n{\"type\": \"LOG\", \"log\": {\"level\": \"INFO\", \"message\": \"https://sandbox-quickbooks.api.intuit.com/v3/company/4620816365161012080/query - Making request to GET endpoint /v3/company/4620816365161012080/query, with params {'query': 'SELECT * FROM CompanyInfo'}\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"INFO\", \"message\": \"Error initializing QuickbooksClient during token refresh, please reauthenticate.\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"CRITICAL (invalid_grant) Token invalid\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"Traceback (most recent call last):\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\\\", line 477, in request\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    url, headers, data = self._client.add_token(\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\\\", line 217, in add_token\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    raise TokenExpiredError()\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"oauthlib.oauth2.rfc6749.errors.TokenExpiredError: (token_expired) \"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"During handling of the above exception, another exception occurred:\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"Traceback (most recent call last):\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\\\", line 54, in __init__\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    self.get('/v3/company/{}/query'.format(self.realm_id), params={\\\"query\\\": \\\"SELECT * FROM CompanyInfo\\\"})\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\\\", line 120, in get\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    return self._make_request(\\\"GET\\\", url, headers=headers, params=params)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\\\", line 94, in retry\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    ret = target(*args, **kwargs)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/singer/utils.py\\\", line 95, in wrapper\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    return func(*args, **kwargs)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\\\", line 106, in _make_request\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    response = self.session.request(method, full_url, headers=headers, params=params, data=data)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\\\", line 496, in request\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    token = self.refresh_token(\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\\\", line 446, in refresh_token\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    self.token = self._client.parse_request_body_response(r.text, scope=self.scope)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\\\", line 427, in parse_request_body_response\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    self.token = parse_token_response(body, scope=scope)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/parameters.py\\\", line 441, in parse_token_response\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    validate_token_parameters(params)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/parameters.py\\\", line 448, in validate_token_parameters\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    raise_from_error(params.get('error'), params)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/errors.py\\\", line 399, in raise_from_error\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    raise cls(**kwargs)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"oauthlib.oauth2.rfc6749.errors.InvalidGrantError: (invalid_grant) Token invalid\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"During handling of the above exception, another exception occurred:\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"Traceback (most recent call last):\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/bin/tap-quickbooks\\\", line 33, in <module>\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    sys.exit(load_entry_point('tap-quickbooks===1.0.5-airbyte', 'console_scripts', 'tap-quickbooks')())\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/singer/utils.py\\\", line 229, in wrapped\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    return fnc(*args, **kwargs)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/tap_quickbooks/__init__.py\\\", line 18, in main\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    client = QuickbooksClient(args.config_path, config)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"  File \\\"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\\\", line 57, in __init__\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"    raise QuickbooksAuthenticationError(e)\"}}\n{\"type\": \"LOG\", \"log\": {\"level\": \"ERROR\", \"message\": \"tap_quickbooks.client.QuickbooksAuthenticationError: (invalid_grant) Token invalid\"}}\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 102, in run\n    catalog = self.source.discover(logger, config)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py\", line 117, in discover\n    return self._discover_internal(logger, config_container.config_path).airbyte_catalog\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py\", line 103, in _discover_internal\n    catalogs = SingerHelper.get_catalogs(logger, cmd, self.get_sync_mode_overrides(), self.get_excluded_streams())\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/singer_helpers.py\", line 157, in get_catalogs\n    singer_catalog = json.loads(completed_process.stdout)\n  File \"/usr/local/lib/python3.9/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/local/lib/python3.9/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/local/lib/python3.9/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n"}}
------------------------------ Captured log setup ------------------------------
WARNING  root:config.py:282 The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
Traceback (most recent call last):
  File "/airbyte/integration_code/main.py", line 13, in <module>
    launch(source, sys.argv[1:])
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py", line 117, in launch
{"type": "LOG", "log": {"level": "INFO", "message": "https://sandbox-quickbooks.api.intuit.com/v3/company/4620816365161012080/query - Making request to GET endpoint /v3/company/4620816365161012080/query, with params {'query': 'SELECT * FROM CompanyInfo'}"}}
{"type": "LOG", "log": {"level": "INFO", "message": "Error initializing QuickbooksClient during token refresh, please reauthenticate."}}
{"type": "LOG", "log": {"level": "ERROR", "message": "CRITICAL (invalid_grant) Token invalid"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "Traceback (most recent call last):"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\", line 477, in request"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    url, headers, data = self._client.add_token("}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 217, in add_token"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    raise TokenExpiredError()"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "oauthlib.oauth2.rfc6749.errors.TokenExpiredError: (token_expired) "}}
{"type": "LOG", "log": {"level": "ERROR", "message": ""}}
{"type": "LOG", "log": {"level": "ERROR", "message": "During handling of the above exception, another exception occurred:"}}
{"type": "LOG", "log": {"level": "ERROR", "message": ""}}
{"type": "LOG", "log": {"level": "ERROR", "message": "Traceback (most recent call last):"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\", line 54, in __init__"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    self.get('/v3/company/{}/query'.format(self.realm_id), params={\"query\": \"SELECT * FROM CompanyInfo\"})"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\", line 120, in get"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    return self._make_request(\"GET\", url, headers=headers, params=params)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    ret = target(*args, **kwargs)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/singer/utils.py\", line 95, in wrapper"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    return func(*args, **kwargs)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\", line 106, in _make_request"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    response = self.session.request(method, full_url, headers=headers, params=params, data=data)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\", line 496, in request"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    token = self.refresh_token("}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/requests_oauthlib/oauth2_session.py\", line 446, in refresh_token"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    self.token = self._client.parse_request_body_response(r.text, scope=self.scope)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 427, in parse_request_body_response"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    self.token = parse_token_response(body, scope=scope)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 441, in parse_token_response"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    validate_token_parameters(params)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 448, in validate_token_parameters"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    raise_from_error(params.get('error'), params)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/oauthlib/oauth2/rfc6749/errors.py\", line 399, in raise_from_error"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    raise cls(**kwargs)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "oauthlib.oauth2.rfc6749.errors.InvalidGrantError: (invalid_grant) Token invalid"}}
{"type": "LOG", "log": {"level": "ERROR", "message": ""}}
{"type": "LOG", "log": {"level": "ERROR", "message": "During handling of the above exception, another exception occurred:"}}
{"type": "LOG", "log": {"level": "ERROR", "message": ""}}
{"type": "LOG", "log": {"level": "ERROR", "message": "Traceback (most recent call last):"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/bin/tap-quickbooks\", line 33, in <module>"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    sys.exit(load_entry_point('tap-quickbooks===1.0.5-airbyte', 'console_scripts', 'tap-quickbooks')())"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/singer/utils.py\", line 229, in wrapped"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    return fnc(*args, **kwargs)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/__init__.py\", line 18, in main"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    client = QuickbooksClient(args.config_path, config)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "  File \"/usr/local/lib/python3.9/site-packages/tap_quickbooks/client.py\", line 57, in __init__"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "    raise QuickbooksAuthenticationError(e)"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "tap_quickbooks.client.QuickbooksAuthenticationError: (invalid_grant) Token invalid"}}
    for message in source_entrypoint.run(parsed_args):
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py", line 102, in run
    catalog = self.source.discover(logger, config)
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py", line 117, in discover
    return self._discover_internal(logger, config_container.config_path).airbyte_catalog
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py", line 103, in _discover_internal
    catalogs = SingerHelper.get_catalogs(logger, cmd, self.get_sync_mode_overrides(), self.get_excluded_streams())
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/singer_helpers.py", line 157, in get_catalogs
    singer_catalog = json.loads(completed_process.stdout)
  File "/usr/local/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/local/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
____ ERROR at setup of TestIncremental.test_read_sequential_slices[inputs0] ____

connector_config = SecretDict(******)
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff8fd2b400>
cached_schemas = {}, cache_discovered_catalog = True

    @pytest.fixture(name="discovered_catalog")
    def discovered_catalog_fixture(
        connector_config, docker_runner: ConnectorRunner, cached_schemas, cache_discovered_catalog: bool
    ) -> MutableMapping[str, AirbyteStream]:
        """JSON schemas for each stream"""
        cached_schemas = cached_schemas.setdefault(make_hashable(connector_config), {})
        if not cache_discovered_catalog:
            cached_schemas.clear()
        if not cached_schemas:
>           output = docker_runner.call_discover(config=connector_config)

connector_acceptance_test/conftest.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:91: in call_discover
    output = list(self.run(cmd=cmd, config=config, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: 3d6fdb03f0>
command = 'discover --config /data/tap_config.json', with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'discover --config /data/tap_config.json' in image '<Image: 'airbyte/source-quickbooks-singer:dev'>' returned non-zero exit status 1: Traceback (most recent call last):
E                 File "/airbyte/integration_code/main.py", line 13, in <module>
E                   launch(source, sys.argv[1:])
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py", line 117, in launch
E                   for message in source_entrypoint.run(parsed_args):
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py", line 102, in run
E                   catalog = self.source.discover(logger, config)
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py", line 117, in discover
E                   return self._discover_internal(logger, config_container.config_path).airbyte_catalog
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py", line 103, in _discover_internal
E                   catalogs = SingerHelper.get_catalogs(logger, cmd, self.get_sync_mode_overrides(), self.get_excluded_streams())
E                 File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/singer_helpers.py", line 157, in get_catalogs
E                   singer_catalog = json.loads(completed_process.stdout)
E                 File "/usr/local/lib/python3.9/json/__init__.py", line 346, in loads
E                   return _default_decoder.decode(s)
E                 File "/usr/local/lib/python3.9/json/decoder.py", line 337, in decode
E                   obj, end = self.raw_decode(s, idx=_w(s, 0).end())
E                 File "/usr/local/lib/python3.9/json/decoder.py", line 355, in raw_decode
E                   raise JSONDecodeError("Expecting value", s, err.value) from None
E               json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\nTraceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 117, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 102, in run\n    catalog = self.source.discover(logger, config)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py\", line 117, in discover\n    return self._discover_internal(logger, config_container.config_path).airbyte_catalog\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py\", line 103, in _discover_internal\n    catalogs = SingerHelper.get_catalogs(logger, cmd, self.get_sync_mode_overrides(), self.get_excluded_streams())\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/singer_helpers.py\", line 157, in get_catalogs\n    singer_catalog = json.loads(completed_process.stdout)\n  File \"/usr/local/lib/python3.9/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/local/lib/python3.9/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/local/lib/python3.9/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n"}}
------------------------------ Captured log setup ------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
Traceback (most recent call last):
  File "/airbyte/integration_code/main.py", line 13, in <module>
    launch(source, sys.argv[1:])
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py", line 117, in launch
    for message in source_entrypoint.run(parsed_args):
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py", line 102, in run
    catalog = self.source.discover(logger, config)
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py", line 117, in discover
    return self._discover_internal(logger, config_container.config_path).airbyte_catalog
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/source.py", line 103, in _discover_internal
    catalogs = SingerHelper.get_catalogs(logger, cmd, self.get_sync_mode_overrides(), self.get_excluded_streams())
  File "/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/singer/singer_helpers.py", line 157, in get_catalogs
    singer_catalog = json.loads(completed_process.stdout)
  File "/usr/local/lib/python3.9/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/local/lib/python3.9/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/local/lib/python3.9/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
=============================== warnings summary ===============================
connector_acceptance_test/config.py:282: 36 warnings
test_core.py: 1 warning
  /airbyte/connector_acceptance_test/connector_acceptance_test/config.py:282: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
    logging.warn("The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.")

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
ERROR ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - dock...
ERROR ../../test_input/test_incremental.py::TestIncremental::test_read_sequential_slices[inputs0]
================ 35 deselected, 37 warnings, 2 errors in 4.18s =================
