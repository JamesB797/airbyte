../../../../connectors/source-bigquery/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-bigquery
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
collected 36 items / 34 deselected / 2 selected

../../test_input/test_core.py E                                          [ 50%]
../../test_input/test_incremental.py E                                   [100%]


==================================== ERRORS ====================================
______________ ERROR at setup of TestBasicRead.test_read[inputs0] ______________

connector_config = SecretDict(******)
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff8e90fbb0>
cached_schemas = {}, cache_discovered_catalog = True

    @pytest.fixture(name="discovered_catalog")
    def discovered_catalog_fixture(
        connector_config, docker_runner: ConnectorRunner, cached_schemas, cache_discovered_catalog: bool
    ) -> MutableMapping[str, AirbyteStream]:
        """JSON schemas for each stream"""
        cached_schemas = cached_schemas.setdefault(make_hashable(connector_config), {})
        if not cache_discovered_catalog:
            cached_schemas.clear()
        if not cached_schemas:
>           output = docker_runner.call_discover(config=connector_config)

connector_acceptance_test/conftest.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:91: in call_discover
    output = list(self.run(cmd=cmd, config=config, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: 14649e318b>
command = 'discover --config /data/tap_config.json', with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'discover --config /data/tap_config.json' in image '<Image: 'airbyte/source-bigquery:dev'>' returned non-zero exit status 1: {"type":"TRACE","trace":{"type":"ERROR","emitted_at":1.679404634665E12,"error":{"message":"Something went wrong in the connector. See the logs for more details.","internal_message":"java.lang.ExceptionInInitializerError","stack_trace":"java.lang.ExceptionInInitializerError\n\tat com.google.api.services.bigquery.Bigquery$Builder.build(Bigquery.java:6461)\n\tat com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.<init>(HttpBigQueryRpc.java:111)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:56)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:50)\n\tat com.google.cloud.ServiceOptions.getRpc(ServiceOptions.java:564)\n\tat com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2(BigQueryOptions.java:125)\n\tat com.google.cloud.bigquery.BigQueryImpl.<init>(BigQueryImpl.java:249)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:46)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:40)\n\tat com.google.cloud.ServiceOptions.getService(ServiceOptions.java:544)\n\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:75)\n\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:52)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:68)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:42)\n\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\n\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\n\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.main(BigQuerySource.java:198)\nCaused by: java.lang.IllegalStateException: You are currently running with version 2.2.0 of google-api-client. You need at least version 1.31.1 of google-api-client to run version 1.32.1 of the BigQuery API library.\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:534)\n\tat com.google.api.client.util.Preconditions.checkState(Preconditions.java:113)\n\tat com.google.api.services.bigquery.Bigquery.<clinit>(Bigquery.java:44)\n\t... 18 more\n","failure_type":"system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\":\"TRACE\",\"trace\":{\"type\":\"ERROR\",\"emitted_at\":1.679404634665E12,\"error\":{\"message\":\"Something went wrong in the connector. See the logs for more details.\",\"internal_message\":\"java.lang.ExceptionInInitializerError\",\"stack_trace\":\"java.lang.ExceptionInInitializerError\\n\\tat com.google.api.services.bigquery.Bigquery$Builder.build(Bigquery.java:6461)\\n\\tat com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.<init>(HttpBigQueryRpc.java:111)\\n\\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:56)\\n\\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:50)\\n\\tat com.google.cloud.ServiceOptions.getRpc(ServiceOptions.java:564)\\n\\tat com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2(BigQueryOptions.java:125)\\n\\tat com.google.cloud.bigquery.BigQueryImpl.<init>(BigQueryImpl.java:249)\\n\\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:46)\\n\\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:40)\\n\\tat com.google.cloud.ServiceOptions.getService(ServiceOptions.java:544)\\n\\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:75)\\n\\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:52)\\n\\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:68)\\n\\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:42)\\n\\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\\n\\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\\n\\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\\n\\tat io.airbyte.integrations.source.bigquery.BigQuerySource.main(BigQuerySource.java:198)\\nCaused by: java.lang.IllegalStateException: You are currently running with version 2.2.0 of google-api-client. You need at least version 1.31.1 of google-api-client to run version 1.32.1 of the BigQuery API library.\\n\\tat com.google.common.base.Preconditions.checkState(Preconditions.java:534)\\n\\tat com.google.api.client.util.Preconditions.checkState(Preconditions.java:113)\\n\\tat com.google.api.services.bigquery.Bigquery.<clinit>(Bigquery.java:44)\\n\\t... 18 more\\n\",\"failure_type\":\"system_error\"}}}\n"}}
------------------------------ Captured log setup ------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type":"TRACE","trace":{"type":"ERROR","emitted_at":1.679404634665E12,"error":{"message":"Something went wrong in the connector. See the logs for more details.","internal_message":"java.lang.ExceptionInInitializerError","stack_trace":"java.lang.ExceptionInInitializerError\n\tat com.google.api.services.bigquery.Bigquery$Builder.build(Bigquery.java:6461)\n\tat com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.<init>(HttpBigQueryRpc.java:111)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:56)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:50)\n\tat com.google.cloud.ServiceOptions.getRpc(ServiceOptions.java:564)\n\tat com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2(BigQueryOptions.java:125)\n\tat com.google.cloud.bigquery.BigQueryImpl.<init>(BigQueryImpl.java:249)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:46)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:40)\n\tat com.google.cloud.ServiceOptions.getService(ServiceOptions.java:544)\n\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:75)\n\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:52)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:68)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:42)\n\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\n\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\n\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.main(BigQuerySource.java:198)\nCaused by: java.lang.IllegalStateException: You are currently running with version 2.2.0 of google-api-client. You need at least version 1.31.1 of google-api-client to run version 1.32.1 of the BigQuery API library.\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:534)\n\tat com.google.api.client.util.Preconditions.checkState(Preconditions.java:113)\n\tat com.google.api.services.bigquery.Bigquery.<clinit>(Bigquery.java:44)\n\t... 18 more\n","failure_type":"system_error"}}}
____ ERROR at setup of TestIncremental.test_read_sequential_slices[inputs0] ____

connector_config = SecretDict(******)
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff8e81c070>
cached_schemas = {}, cache_discovered_catalog = True

    @pytest.fixture(name="discovered_catalog")
    def discovered_catalog_fixture(
        connector_config, docker_runner: ConnectorRunner, cached_schemas, cache_discovered_catalog: bool
    ) -> MutableMapping[str, AirbyteStream]:
        """JSON schemas for each stream"""
        cached_schemas = cached_schemas.setdefault(make_hashable(connector_config), {})
        if not cache_discovered_catalog:
            cached_schemas.clear()
        if not cached_schemas:
>           output = docker_runner.call_discover(config=connector_config)

connector_acceptance_test/conftest.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:91: in call_discover
    output = list(self.run(cmd=cmd, config=config, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: a9c7e377a3>
command = 'discover --config /data/tap_config.json', with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'discover --config /data/tap_config.json' in image '<Image: 'airbyte/source-bigquery:dev'>' returned non-zero exit status 1: {"type":"TRACE","trace":{"type":"ERROR","emitted_at":1.679404638322E12,"error":{"message":"Something went wrong in the connector. See the logs for more details.","internal_message":"java.lang.ExceptionInInitializerError","stack_trace":"java.lang.ExceptionInInitializerError\n\tat com.google.api.services.bigquery.Bigquery$Builder.build(Bigquery.java:6461)\n\tat com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.<init>(HttpBigQueryRpc.java:111)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:56)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:50)\n\tat com.google.cloud.ServiceOptions.getRpc(ServiceOptions.java:564)\n\tat com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2(BigQueryOptions.java:125)\n\tat com.google.cloud.bigquery.BigQueryImpl.<init>(BigQueryImpl.java:249)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:46)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:40)\n\tat com.google.cloud.ServiceOptions.getService(ServiceOptions.java:544)\n\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:75)\n\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:52)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:68)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:42)\n\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\n\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\n\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.main(BigQuerySource.java:198)\nCaused by: java.lang.IllegalStateException: You are currently running with version 2.2.0 of google-api-client. You need at least version 1.31.1 of google-api-client to run version 1.32.1 of the BigQuery API library.\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:534)\n\tat com.google.api.client.util.Preconditions.checkState(Preconditions.java:113)\n\tat com.google.api.services.bigquery.Bigquery.<clinit>(Bigquery.java:44)\n\t... 18 more\n","failure_type":"system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\":\"TRACE\",\"trace\":{\"type\":\"ERROR\",\"emitted_at\":1.679404638322E12,\"error\":{\"message\":\"Something went wrong in the connector. See the logs for more details.\",\"internal_message\":\"java.lang.ExceptionInInitializerError\",\"stack_trace\":\"java.lang.ExceptionInInitializerError\\n\\tat com.google.api.services.bigquery.Bigquery$Builder.build(Bigquery.java:6461)\\n\\tat com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.<init>(HttpBigQueryRpc.java:111)\\n\\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:56)\\n\\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:50)\\n\\tat com.google.cloud.ServiceOptions.getRpc(ServiceOptions.java:564)\\n\\tat com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2(BigQueryOptions.java:125)\\n\\tat com.google.cloud.bigquery.BigQueryImpl.<init>(BigQueryImpl.java:249)\\n\\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:46)\\n\\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:40)\\n\\tat com.google.cloud.ServiceOptions.getService(ServiceOptions.java:544)\\n\\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:75)\\n\\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:52)\\n\\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:68)\\n\\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:42)\\n\\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\\n\\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\\n\\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\\n\\tat io.airbyte.integrations.source.bigquery.BigQuerySource.main(BigQuerySource.java:198)\\nCaused by: java.lang.IllegalStateException: You are currently running with version 2.2.0 of google-api-client. You need at least version 1.31.1 of google-api-client to run version 1.32.1 of the BigQuery API library.\\n\\tat com.google.common.base.Preconditions.checkState(Preconditions.java:534)\\n\\tat com.google.api.client.util.Preconditions.checkState(Preconditions.java:113)\\n\\tat com.google.api.services.bigquery.Bigquery.<clinit>(Bigquery.java:44)\\n\\t... 18 more\\n\",\"failure_type\":\"system_error\"}}}\n"}}
------------------------------ Captured log setup ------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type":"TRACE","trace":{"type":"ERROR","emitted_at":1.679404638322E12,"error":{"message":"Something went wrong in the connector. See the logs for more details.","internal_message":"java.lang.ExceptionInInitializerError","stack_trace":"java.lang.ExceptionInInitializerError\n\tat com.google.api.services.bigquery.Bigquery$Builder.build(Bigquery.java:6461)\n\tat com.google.cloud.bigquery.spi.v2.HttpBigQueryRpc.<init>(HttpBigQueryRpc.java:111)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:56)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryRpcFactory.create(BigQueryOptions.java:50)\n\tat com.google.cloud.ServiceOptions.getRpc(ServiceOptions.java:564)\n\tat com.google.cloud.bigquery.BigQueryOptions.getBigQueryRpcV2(BigQueryOptions.java:125)\n\tat com.google.cloud.bigquery.BigQueryImpl.<init>(BigQueryImpl.java:249)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:46)\n\tat com.google.cloud.bigquery.BigQueryOptions$DefaultBigQueryFactory.create(BigQueryOptions.java:40)\n\tat com.google.cloud.ServiceOptions.getService(ServiceOptions.java:544)\n\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:75)\n\tat io.airbyte.db.bigquery.BigQueryDatabase.<init>(BigQueryDatabase.java:52)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:68)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.createDatabase(BigQuerySource.java:42)\n\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\n\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\n\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\n\tat io.airbyte.integrations.source.bigquery.BigQuerySource.main(BigQuerySource.java:198)\nCaused by: java.lang.IllegalStateException: You are currently running with version 2.2.0 of google-api-client. You need at least version 1.31.1 of google-api-client to run version 1.32.1 of the BigQuery API library.\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:534)\n\tat com.google.api.client.util.Preconditions.checkState(Preconditions.java:113)\n\tat com.google.api.services.bigquery.Bigquery.<clinit>(Bigquery.java:44)\n\t... 18 more\n","failure_type":"system_error"}}}
=========================== short test summary info ============================
ERROR ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - dock...
ERROR ../../test_input/test_incremental.py::TestIncremental::test_read_sequential_slices[inputs0]
======================= 34 deselected, 2 errors in 9.95s =======================
