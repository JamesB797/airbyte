../../../../connectors/source-nasa/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-nasa
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
collected 37 items / 35 deselected / 2 selected

../../test_input/test_core.py .                                          [ 50%]
../../test_input/test_incremental.py F                                   [100%]


=================================== FAILURES ===================================
_____________ TestIncremental.test_read_sequential_slices[inputs0] _____________

self = <connector_acceptance_test.tests.test_incremental.TestIncremental object at 0xffffb2ffe0d0>
inputs = IncrementalConfig(config_path='secrets/config.json', configured_catalog_path='integration_tests/configured_catalog.jso...ng_streams=[], bypass_reason=None), timeout_seconds=None, threshold_days=0, skip_comprehensive_incremental_tests=False)
connector_config = SecretDict(******)
configured_catalog_for_incremental = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='nasa_apod', json_schema={'$schema...ental'>, cursor_field=['date'], destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
cursor_paths = {'nasa_apod': ['date']}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffffb2a75bb0>

    def test_read_sequential_slices(
        self, inputs: IncrementalConfig, connector_config, configured_catalog_for_incremental, cursor_paths, docker_runner: ConnectorRunner
    ):
        """
        Incremental test that makes calls to the read method without a state checkpoint. Then we partition the results by stream and
        slice checkpoints.
        Then we make additional read method calls using the state message and verify the correctness of the
        messages in the response.
        """
        if inputs.skip_comprehensive_incremental_tests:
            pytest.skip("Skipping new incremental test based on acceptance-test-config.yml")
            return
    
        threshold_days = getattr(inputs, "threshold_days") or 0
        stream_mapping = {stream.stream.name: stream for stream in configured_catalog_for_incremental.streams}
    
        output = docker_runner.call_read(connector_config, configured_catalog_for_incremental)
        records_1 = filter_output(output, type_=Type.RECORD)
        states_1 = filter_output(output, type_=Type.STATE)
    
        assert states_1, "Should produce at least one state"
        assert records_1, "Should produce at least one record"
    
        # For legacy state format, the final state message contains the final state of all streams. For per-stream state format,
        # the complete final state of streams must be assembled by going through all prior state messages received
        is_per_stream = is_per_stream_state(states_1[-1])
        if is_per_stream:
            latest_state = construct_latest_state_from_messages(states_1)
        else:
            latest_state = states_1[-1].state.data
    
        for record_value, state_value, stream_name in records_with_state(records_1, latest_state, stream_mapping, cursor_paths):
            assert (
                record_value <= state_value
            ), f"First incremental sync should produce records younger or equal to cursor value from the state. Stream: {stream_name}"
    
        checkpoint_messages = filter_output(output, type_=Type.STATE)
    
        # We sometimes have duplicate identical state messages in a stream which we can filter out to speed things up
        checkpoint_messages = [message for index, message in enumerate(checkpoint_messages) if message not in checkpoint_messages[:index]]
    
        # To avoid spamming APIs we only test a fraction of batches (10%) and enforce a minimum of 10 tested
        min_batches_to_test = 10
        sample_rate = len(checkpoint_messages) // min_batches_to_test
        stream_name_to_per_stream_state = dict()
        for idx, state_message in enumerate(checkpoint_messages):
            assert state_message.type == Type.STATE
            state_input, complete_state = self.get_next_state_input(state_message, stream_name_to_per_stream_state, is_per_stream)
    
            if len(checkpoint_messages) >= min_batches_to_test and idx % sample_rate != 0:
                continue
    
>           output = docker_runner.call_read_with_state(connector_config, configured_catalog_for_incremental, state=state_input)

connector_acceptance_test/tests/test_incremental.py:254: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:101: in call_read_with_state
    output = list(self.run(cmd=cmd, config=config, catalog=catalog, state=state, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: 762442aa5c>
command = 'read --config /data/tap_config.json --catalog /data/catalog.json --state /data/state.json'
with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'read --config /data/tap_config.json --catalog /data/catalog.json --state /data/state.json' in image '<Image: 'airbyte/source-nasa:dev'>' returned non-zero exit status 1: {"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679408066026.549, "error": {"message": "You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance", "internal_message": "Request URL: https://api.nasa.gov/planetary/apod?api_key=****&date=2022-09-15, Response Code: 429, Response Text: {\n  \"error\": {\n    \"code\": \"OVER_RATE_LIMIT\",\n    \"message\": \"You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance\"\n  }\n}", "stack_trace": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 120, in read\n    yield from self._read_stream(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 189, in _read_stream\n    for record in record_iterator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 256, in _read_incremental\n    for message_counter, record_data_or_message in enumerate(records, start=1):\n  File \"/airbyte/integration_code/source_nasa/source.py\", line 123, in read_records\n    for record in super().read_records(*args, **kwargs):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 419, in read_records\n    yield from self._read_pages(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 435, in _read_pages\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 458, in _fetch_next_page\n    response = self._send_request(request, request_kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 360, in _send_request\n    return backoff_handler(user_backoff_handler)(request, request_kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 105, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 105, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 320, in _send\n    raise DefaultBackoffException(request=request, response=response, error_message=error_message)\nairbyte_cdk.sources.streams.http.exceptions.DefaultBackoffException: Request URL: https://api.nasa.gov/planetary/apod?api_key=****&date=2022-09-15, Response Code: 429, Response Text: {\n  \"error\": {\n    \"code\": \"OVER_RATE_LIMIT\",\n    \"message\": \"You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance\"\n  }\n}\n", "failure_type": "system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\": \"TRACE\", \"trace\": {\"type\": \"ERROR\", \"emitted_at\": 1679408066026.549, \"error\": {\"message\": \"You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance\", \"internal_message\": \"Request URL: https://api.nasa.gov/planetary/apod?api_key=****&date=2022-09-15, Response Code: 429, Response Text: {\\n  \\\"error\\\": {\\n    \\\"code\\\": \\\"OVER_RATE_LIMIT\\\",\\n    \\\"message\\\": \\\"You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance\\\"\\n  }\\n}\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 120, in read\\n    yield from self._read_stream(\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 189, in _read_stream\\n    for record in record_iterator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 256, in _read_incremental\\n    for message_counter, record_data_or_message in enumerate(records, start=1):\\n  File \\\"/airbyte/integration_code/source_nasa/source.py\\\", line 123, in read_records\\n    for record in super().read_records(*args, **kwargs):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 419, in read_records\\n    yield from self._read_pages(\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 435, in _read_pages\\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 458, in _fetch_next_page\\n    response = self._send_request(request, request_kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 360, in _send_request\\n    return backoff_handler(user_backoff_handler)(request, request_kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\\\", line 105, in retry\\n    ret = target(*args, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\\\", line 105, in retry\\n    ret = target(*args, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 320, in _send\\n    raise DefaultBackoffException(request=request, response=response, error_message=error_message)\\nairbyte_cdk.sources.streams.http.exceptions.DefaultBackoffException: Request URL: https://api.nasa.gov/planetary/apod?api_key=****&date=2022-09-15, Response Code: 429, Response Text: {\\n  \\\"error\\\": {\\n    \\\"code\\\": \\\"OVER_RATE_LIMIT\\\",\\n    \\\"message\\\": \\\"You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance\\\"\\n  }\\n}\\n\", \"failure_type\": \"system_error\"}}}\n"}}
------------------------------ Captured log call -------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679408066026.549, "error": {"message": "You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance", "internal_message": "Request URL: https://api.nasa.gov/planetary/apod?api_key=****&date=2022-09-15, Response Code: 429, Response Text: {\n  \"error\": {\n    \"code\": \"OVER_RATE_LIMIT\",\n    \"message\": \"You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance\"\n  }\n}", "stack_trace": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 120, in read\n    yield from self._read_stream(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 189, in _read_stream\n    for record in record_iterator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 256, in _read_incremental\n    for message_counter, record_data_or_message in enumerate(records, start=1):\n  File \"/airbyte/integration_code/source_nasa/source.py\", line 123, in read_records\n    for record in super().read_records(*args, **kwargs):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 419, in read_records\n    yield from self._read_pages(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 435, in _read_pages\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 458, in _fetch_next_page\n    response = self._send_request(request, request_kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 360, in _send_request\n    return backoff_handler(user_backoff_handler)(request, request_kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 105, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 105, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 320, in _send\n    raise DefaultBackoffException(request=request, response=response, error_message=error_message)\nairbyte_cdk.sources.streams.http.exceptions.DefaultBackoffException: Request URL: https://api.nasa.gov/planetary/apod?api_key=****&date=2022-09-15, Response Code: 429, Response Text: {\n  \"error\": {\n    \"code\": \"OVER_RATE_LIMIT\",\n    \"message\": \"You have exceeded your rate limit. Try again later or contact us at https://api.nasa.gov:443/contact/ for assistance\"\n  }\n}\n", "failure_type": "system_error"}}}
=============================== warnings summary ===============================
connector_acceptance_test/config.py:282: 36 warnings
test_core.py: 1 warning
  /airbyte/connector_acceptance_test/connector_acceptance_test/config.py:282: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
    logging.warn("The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.")

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
FAILED ../../test_input/test_incremental.py::TestIncremental::test_read_sequential_slices[inputs0]
===== 1 failed, 1 passed, 35 deselected, 37 warnings in 185.96s (0:03:05) ======
