../../../../connectors/source-mongodb-v2/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-mongodb-v2
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
collected 33 items / 32 deselected / 1 skipped

../../test_input/test_core.py E                                          [100%]


==================================== ERRORS ====================================
______________ ERROR at setup of TestBasicRead.test_read[inputs0] ______________

connector_config = SecretDict(******)
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff7c9555e0>
cached_schemas = {}, cache_discovered_catalog = True

    @pytest.fixture(name="discovered_catalog")
    def discovered_catalog_fixture(
        connector_config, docker_runner: ConnectorRunner, cached_schemas, cache_discovered_catalog: bool
    ) -> MutableMapping[str, AirbyteStream]:
        """JSON schemas for each stream"""
        cached_schemas = cached_schemas.setdefault(make_hashable(connector_config), {})
        if not cache_discovered_catalog:
            cached_schemas.clear()
        if not cached_schemas:
>           output = docker_runner.call_discover(config=connector_config)

connector_acceptance_test/conftest.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:91: in call_discover
    output = list(self.run(cmd=cmd, config=config, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: a1dd1d1b03>
command = 'discover --config /data/tap_config.json', with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'discover --config /data/tap_config.json' in image '<Image: 'airbyte/source-mongodb-v2:dev'>' returned non-zero exit status 1: {"type":"TRACE","trace":{"type":"ERROR","emitted_at":1.67940783611E12,"error":{"message":"Something went wrong in the connector. See the logs for more details.","internal_message":"java.lang.NullPointerException: Cannot invoke \"com.fasterxml.jackson.databind.JsonNode.get(String)\" because \"instanceConfig\" is null","stack_trace":"java.lang.NullPointerException: Cannot invoke \"com.fasterxml.jackson.databind.JsonNode.get(String)\" because \"instanceConfig\" is null\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.buildConnectionString(MongoDbSource.java:219)\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.toDatabaseConfig(MongoDbSource.java:64)\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.createDatabase(MongoDbSource.java:71)\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.createDatabase(MongoDbSource.java:46)\n\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\n\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\n\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.main(MongoDbSource.java:53)\n","failure_type":"system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\":\"TRACE\",\"trace\":{\"type\":\"ERROR\",\"emitted_at\":1.67940783611E12,\"error\":{\"message\":\"Something went wrong in the connector. See the logs for more details.\",\"internal_message\":\"java.lang.NullPointerException: Cannot invoke \\\"com.fasterxml.jackson.databind.JsonNode.get(String)\\\" because \\\"instanceConfig\\\" is null\",\"stack_trace\":\"java.lang.NullPointerException: Cannot invoke \\\"com.fasterxml.jackson.databind.JsonNode.get(String)\\\" because \\\"instanceConfig\\\" is null\\n\\tat io.airbyte.integrations.source.mongodb.MongoDbSource.buildConnectionString(MongoDbSource.java:219)\\n\\tat io.airbyte.integrations.source.mongodb.MongoDbSource.toDatabaseConfig(MongoDbSource.java:64)\\n\\tat io.airbyte.integrations.source.mongodb.MongoDbSource.createDatabase(MongoDbSource.java:71)\\n\\tat io.airbyte.integrations.source.mongodb.MongoDbSource.createDatabase(MongoDbSource.java:46)\\n\\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\\n\\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\\n\\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\\n\\tat io.airbyte.integrations.source.mongodb.MongoDbSource.main(MongoDbSource.java:53)\\n\",\"failure_type\":\"system_error\"}}}\n"}}
------------------------------ Captured log setup ------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type":"TRACE","trace":{"type":"ERROR","emitted_at":1.67940783611E12,"error":{"message":"Something went wrong in the connector. See the logs for more details.","internal_message":"java.lang.NullPointerException: Cannot invoke \"com.fasterxml.jackson.databind.JsonNode.get(String)\" because \"instanceConfig\" is null","stack_trace":"java.lang.NullPointerException: Cannot invoke \"com.fasterxml.jackson.databind.JsonNode.get(String)\" because \"instanceConfig\" is null\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.buildConnectionString(MongoDbSource.java:219)\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.toDatabaseConfig(MongoDbSource.java:64)\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.createDatabase(MongoDbSource.java:71)\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.createDatabase(MongoDbSource.java:46)\n\tat io.airbyte.integrations.source.relationaldb.AbstractDbSource.discover(AbstractDbSource.java:111)\n\tat io.airbyte.integrations.base.IntegrationRunner.runInternal(IntegrationRunner.java:129)\n\tat io.airbyte.integrations.base.IntegrationRunner.run(IntegrationRunner.java:98)\n\tat io.airbyte.integrations.source.mongodb.MongoDbSource.main(MongoDbSource.java:53)\n","failure_type":"system_error"}}}
=========================== short test summary info ============================
ERROR ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - dock...
SKIPPED [1] connector_acceptance_test/plugin.py:63: Skipping TestIncremental.test_two_sequential_reads: not found in the config.
================== 1 skipped, 32 deselected, 1 error in 2.01s ==================
