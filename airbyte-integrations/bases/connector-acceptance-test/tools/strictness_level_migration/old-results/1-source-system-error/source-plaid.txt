../../../../connectors/source-plaid/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-plaid
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
collected 37 items / 35 deselected / 2 selected

../../test_input/test_core.py F                                          [ 50%]
../../test_input/test_incremental.py F                                   [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffff9b3576d0>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='balance', json_schema={'$schema':...l_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
expect_records_config = None, should_validate_schema = True
should_validate_data_points = False, should_fail_on_extra_columns = True
empty_streams = set(), ignored_fields = {}, expected_records_by_stream = {}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff9b3258b0>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
>       output = docker_runner.call_read(connector_config, configured_catalog)

connector_acceptance_test/tests/test_core.py:817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:96: in call_read
    output = list(self.run(cmd=cmd, config=config, catalog=catalog, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: cce3865cd4>
command = 'read --config /data/tap_config.json --catalog /data/catalog.json'
with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'read --config /data/tap_config.json --catalog /data/catalog.json' in image '<Image: 'airbyte/source-plaid:dev'>' returned non-zero exit status 1: {"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679408590839.635, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "(400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\nHTTP response body: {\n  \"display_message\": null,\n  \"error_code\": \"ITEM_LOGIN_REQUIRED\",\n  \"error_message\": \"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\",\n  \"error_type\": \"ITEM_ERROR\",\n  \"request_id\": \"sQgJUtVAf8HlNM4\",\n  \"suggested_action\": null\n}\n", "stack_trace": "Traceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 134, in read\n    raise e\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 120, in read\n    yield from self._read_stream(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 189, in _read_stream\n    for record in record_iterator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 307, in _read_full_refresh\n    for record_data_or_message in record_data_or_messages:\n  File \"/airbyte/integration_code/source_plaid/source.py\", line 60, in read_records\n    balance_response = self.client.accounts_balance_get(getRequest)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 769, in __call__\n    return self.callable(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api/plaid_api.py\", line 488, in __accounts_balance_get\n    return self.call_with_http_info(**kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 831, in call_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 406, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 200, in __call_api\n    raise e\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 193, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 452, in request\n    return self.rest_client.POST(url,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/rest.py\", line 264, in POST\n    return self.request(\"POST\", url,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/rest.py\", line 223, in request\n    raise ApiException(http_resp=r)\nplaid.exceptions.ApiException: (400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\nHTTP response body: {\n  \"display_message\": null,\n  \"error_code\": \"ITEM_LOGIN_REQUIRED\",\n  \"error_message\": \"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\",\n  \"error_type\": \"ITEM_ERROR\",\n  \"request_id\": \"sQgJUtVAf8HlNM4\",\n  \"suggested_action\": null\n}\n\n", "failure_type": "system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
------------------------------ Captured log setup ------------------------------
WARNING  root:config.py:282 The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\": \"TRACE\", \"trace\": {\"type\": \"ERROR\", \"emitted_at\": 1679408590839.635, \"error\": {\"message\": \"Something went wrong in the connector. See the logs for more details.\", \"internal_message\": \"(400)\\nReason: Bad Request\\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\\nHTTP response body: {\\n  \\\"display_message\\\": null,\\n  \\\"error_code\\\": \\\"ITEM_LOGIN_REQUIRED\\\",\\n  \\\"error_message\\\": \\\"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\\\",\\n  \\\"error_type\\\": \\\"ITEM_ERROR\\\",\\n  \\\"request_id\\\": \\\"sQgJUtVAf8HlNM4\\\",\\n  \\\"suggested_action\\\": null\\n}\\n\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/airbyte/integration_code/main.py\\\", line 13, in <module>\\n    launch(source, sys.argv[1:])\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 131, in launch\\n    for message in source_entrypoint.run(parsed_args):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 122, in run\\n    for message in generator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 134, in read\\n    raise e\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 120, in read\\n    yield from self._read_stream(\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 189, in _read_stream\\n    for record in record_iterator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 307, in _read_full_refresh\\n    for record_data_or_message in record_data_or_messages:\\n  File \\\"/airbyte/integration_code/source_plaid/source.py\\\", line 60, in read_records\\n    balance_response = self.client.accounts_balance_get(getRequest)\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 769, in __call__\\n    return self.callable(self, *args, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api/plaid_api.py\\\", line 488, in __accounts_balance_get\\n    return self.call_with_http_info(**kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 831, in call_with_http_info\\n    return self.api_client.call_api(\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 406, in call_api\\n    return self.__call_api(resource_path, method,\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 200, in __call_api\\n    raise e\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 193, in __call_api\\n    response_data = self.request(\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 452, in request\\n    return self.rest_client.POST(url,\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/rest.py\\\", line 264, in POST\\n    return self.request(\\\"POST\\\", url,\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/rest.py\\\", line 223, in request\\n    raise ApiException(http_resp=r)\\nplaid.exceptions.ApiException: (400)\\nReason: Bad Request\\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\\nHTTP response body: {\\n  \\\"display_message\\\": null,\\n  \\\"error_code\\\": \\\"ITEM_LOGIN_REQUIRED\\\",\\n  \\\"error_message\\\": \\\"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\\\",\\n  \\\"error_type\\\": \\\"ITEM_ERROR\\\",\\n  \\\"request_id\\\": \\\"sQgJUtVAf8HlNM4\\\",\\n  \\\"suggested_action\\\": null\\n}\\n\\n\", \"failure_type\": \"system_error\"}}}\n"}}
------------------------------ Captured log call -------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679408590839.635, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "(400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\nHTTP response body: {\n  \"display_message\": null,\n  \"error_code\": \"ITEM_LOGIN_REQUIRED\",\n  \"error_message\": \"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\",\n  \"error_type\": \"ITEM_ERROR\",\n  \"request_id\": \"sQgJUtVAf8HlNM4\",\n  \"suggested_action\": null\n}\n", "stack_trace": "Traceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 134, in read\n    raise e\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 120, in read\n    yield from self._read_stream(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 189, in _read_stream\n    for record in record_iterator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 307, in _read_full_refresh\n    for record_data_or_message in record_data_or_messages:\n  File \"/airbyte/integration_code/source_plaid/source.py\", line 60, in read_records\n    balance_response = self.client.accounts_balance_get(getRequest)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 769, in __call__\n    return self.callable(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api/plaid_api.py\", line 488, in __accounts_balance_get\n    return self.call_with_http_info(**kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 831, in call_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 406, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 200, in __call_api\n    raise e\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 193, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 452, in request\n    return self.rest_client.POST(url,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/rest.py\", line 264, in POST\n    return self.request(\"POST\", url,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/rest.py\", line 223, in request\n    raise ApiException(http_resp=r)\nplaid.exceptions.ApiException: (400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:10 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\nHTTP response body: {\n  \"display_message\": null,\n  \"error_code\": \"ITEM_LOGIN_REQUIRED\",\n  \"error_message\": \"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\",\n  \"error_type\": \"ITEM_ERROR\",\n  \"request_id\": \"sQgJUtVAf8HlNM4\",\n  \"suggested_action\": null\n}\n\n", "failure_type": "system_error"}}}
_____________ TestIncremental.test_read_sequential_slices[inputs0] _____________

self = <connector_acceptance_test.tests.test_incremental.TestIncremental object at 0xffff9b99a940>
inputs = IncrementalConfig(config_path='secrets/config.json', configured_catalog_path='integration_tests/configured_catalog.jso...ng_streams=[], bypass_reason=None), timeout_seconds=None, threshold_days=0, skip_comprehensive_incremental_tests=False)
connector_config = SecretDict(******)
configured_catalog_for_incremental = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='transaction', json_schema={'$sche...ental'>, cursor_field=['date'], destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
cursor_paths = {'transaction': ['date']}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff9bc42820>

    def test_read_sequential_slices(
        self, inputs: IncrementalConfig, connector_config, configured_catalog_for_incremental, cursor_paths, docker_runner: ConnectorRunner
    ):
        """
        Incremental test that makes calls to the read method without a state checkpoint. Then we partition the results by stream and
        slice checkpoints.
        Then we make additional read method calls using the state message and verify the correctness of the
        messages in the response.
        """
        if inputs.skip_comprehensive_incremental_tests:
            pytest.skip("Skipping new incremental test based on acceptance-test-config.yml")
            return
    
        threshold_days = getattr(inputs, "threshold_days") or 0
        stream_mapping = {stream.stream.name: stream for stream in configured_catalog_for_incremental.streams}
    
>       output = docker_runner.call_read(connector_config, configured_catalog_for_incremental)

connector_acceptance_test/tests/test_incremental.py:218: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:96: in call_read
    output = list(self.run(cmd=cmd, config=config, catalog=catalog, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: 62360120e8>
command = 'read --config /data/tap_config.json --catalog /data/catalog.json'
with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'read --config /data/tap_config.json --catalog /data/catalog.json' in image '<Image: 'airbyte/source-plaid:dev'>' returned non-zero exit status 1: {"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679408592607.053, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "(400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\nHTTP response body: {\n  \"display_message\": null,\n  \"error_code\": \"ITEM_LOGIN_REQUIRED\",\n  \"error_message\": \"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\",\n  \"error_type\": \"ITEM_ERROR\",\n  \"request_id\": \"N9j0XueTp5DbP2n\",\n  \"suggested_action\": null\n}\n", "stack_trace": "Traceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 134, in read\n    raise e\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 120, in read\n    yield from self._read_stream(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 189, in _read_stream\n    for record in record_iterator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 256, in _read_incremental\n    for message_counter, record_data_or_message in enumerate(records, start=1):\n  File \"/airbyte/integration_code/source_plaid/source.py\", line 116, in read_records\n    response = self._get_transactions_response(date)\n  File \"/airbyte/integration_code/source_plaid/source.py\", line 91, in _get_transactions_response\n    return self.client.transactions_get(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 769, in __call__\n    return self.callable(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api/plaid_api.py\", line 17198, in __transactions_get\n    return self.call_with_http_info(**kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 831, in call_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 406, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 200, in __call_api\n    raise e\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 193, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 452, in request\n    return self.rest_client.POST(url,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/rest.py\", line 264, in POST\n    return self.request(\"POST\", url,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/rest.py\", line 223, in request\n    raise ApiException(http_resp=r)\nplaid.exceptions.ApiException: (400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\nHTTP response body: {\n  \"display_message\": null,\n  \"error_code\": \"ITEM_LOGIN_REQUIRED\",\n  \"error_message\": \"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\",\n  \"error_type\": \"ITEM_ERROR\",\n  \"request_id\": \"N9j0XueTp5DbP2n\",\n  \"suggested_action\": null\n}\n\n", "failure_type": "system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\": \"TRACE\", \"trace\": {\"type\": \"ERROR\", \"emitted_at\": 1679408592607.053, \"error\": {\"message\": \"Something went wrong in the connector. See the logs for more details.\", \"internal_message\": \"(400)\\nReason: Bad Request\\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\\nHTTP response body: {\\n  \\\"display_message\\\": null,\\n  \\\"error_code\\\": \\\"ITEM_LOGIN_REQUIRED\\\",\\n  \\\"error_message\\\": \\\"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\\\",\\n  \\\"error_type\\\": \\\"ITEM_ERROR\\\",\\n  \\\"request_id\\\": \\\"N9j0XueTp5DbP2n\\\",\\n  \\\"suggested_action\\\": null\\n}\\n\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/airbyte/integration_code/main.py\\\", line 13, in <module>\\n    launch(source, sys.argv[1:])\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 131, in launch\\n    for message in source_entrypoint.run(parsed_args):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 122, in run\\n    for message in generator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 134, in read\\n    raise e\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 120, in read\\n    yield from self._read_stream(\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 189, in _read_stream\\n    for record in record_iterator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 256, in _read_incremental\\n    for message_counter, record_data_or_message in enumerate(records, start=1):\\n  File \\\"/airbyte/integration_code/source_plaid/source.py\\\", line 116, in read_records\\n    response = self._get_transactions_response(date)\\n  File \\\"/airbyte/integration_code/source_plaid/source.py\\\", line 91, in _get_transactions_response\\n    return self.client.transactions_get(\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 769, in __call__\\n    return self.callable(self, *args, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api/plaid_api.py\\\", line 17198, in __transactions_get\\n    return self.call_with_http_info(**kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 831, in call_with_http_info\\n    return self.api_client.call_api(\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 406, in call_api\\n    return self.__call_api(resource_path, method,\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 200, in __call_api\\n    raise e\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 193, in __call_api\\n    response_data = self.request(\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\\\", line 452, in request\\n    return self.rest_client.POST(url,\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/rest.py\\\", line 264, in POST\\n    return self.request(\\\"POST\\\", url,\\n  File \\\"/usr/local/lib/python3.9/site-packages/plaid/rest.py\\\", line 223, in request\\n    raise ApiException(http_resp=r)\\nplaid.exceptions.ApiException: (400)\\nReason: Bad Request\\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\\nHTTP response body: {\\n  \\\"display_message\\\": null,\\n  \\\"error_code\\\": \\\"ITEM_LOGIN_REQUIRED\\\",\\n  \\\"error_message\\\": \\\"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\\\",\\n  \\\"error_type\\\": \\\"ITEM_ERROR\\\",\\n  \\\"request_id\\\": \\\"N9j0XueTp5DbP2n\\\",\\n  \\\"suggested_action\\\": null\\n}\\n\\n\", \"failure_type\": \"system_error\"}}}\n"}}
------------------------------ Captured log call -------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679408592607.053, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "(400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\nHTTP response body: {\n  \"display_message\": null,\n  \"error_code\": \"ITEM_LOGIN_REQUIRED\",\n  \"error_message\": \"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\",\n  \"error_type\": \"ITEM_ERROR\",\n  \"request_id\": \"N9j0XueTp5DbP2n\",\n  \"suggested_action\": null\n}\n", "stack_trace": "Traceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 134, in read\n    raise e\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 120, in read\n    yield from self._read_stream(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 189, in _read_stream\n    for record in record_iterator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 256, in _read_incremental\n    for message_counter, record_data_or_message in enumerate(records, start=1):\n  File \"/airbyte/integration_code/source_plaid/source.py\", line 116, in read_records\n    response = self._get_transactions_response(date)\n  File \"/airbyte/integration_code/source_plaid/source.py\", line 91, in _get_transactions_response\n    return self.client.transactions_get(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 769, in __call__\n    return self.callable(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api/plaid_api.py\", line 17198, in __transactions_get\n    return self.call_with_http_info(**kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 831, in call_with_http_info\n    return self.api_client.call_api(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 406, in call_api\n    return self.__call_api(resource_path, method,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 200, in __call_api\n    raise e\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 193, in __call_api\n    response_data = self.request(\n  File \"/usr/local/lib/python3.9/site-packages/plaid/api_client.py\", line 452, in request\n    return self.rest_client.POST(url,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/rest.py\", line 264, in POST\n    return self.request(\"POST\", url,\n  File \"/usr/local/lib/python3.9/site-packages/plaid/rest.py\", line 223, in request\n    raise ApiException(http_resp=r)\nplaid.exceptions.ApiException: (400)\nReason: Bad Request\nHTTP response headers: HTTPHeaderDict({'Server': 'nginx', 'Date': 'Tue, 21 Mar 2023 14:23:12 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '387', 'Connection': 'keep-alive', 'plaid-version': '2020-09-14'})\nHTTP response body: {\n  \"display_message\": null,\n  \"error_code\": \"ITEM_LOGIN_REQUIRED\",\n  \"error_message\": \"the login details of this item have changed (credentials, MFA, or required user action) and a user login is required to update this information. use Link's update mode to restore the item to a good state\",\n  \"error_type\": \"ITEM_ERROR\",\n  \"request_id\": \"N9j0XueTp5DbP2n\",\n  \"suggested_action\": null\n}\n\n", "failure_type": "system_error"}}}
=============================== warnings summary ===============================
connector_acceptance_test/config.py:282: 36 warnings
test_core.py: 1 warning
  /airbyte/connector_acceptance_test/connector_acceptance_test/config.py:282: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
    logging.warn("The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.")

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - doc...
FAILED ../../test_input/test_incremental.py::TestIncremental::test_read_sequential_slices[inputs0]
================ 2 failed, 35 deselected, 37 warnings in 5.31s =================
