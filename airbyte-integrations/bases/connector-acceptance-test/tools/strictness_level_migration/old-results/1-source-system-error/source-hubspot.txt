../../../../connectors/source-hubspot/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-hubspot
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
collected 39 items / 37 deselected / 2 selected

../../test_input/test_core.py F                                          [ 50%]
../../test_input/test_incremental.py F                                   [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffff876c2940>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='campaigns', json_schema={'$schema...ull_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=[['id']])])
expect_records_config = ExpectedRecordsConfig(bypass_reason=None, path=PosixPath('integration_tests/expected_records.jsonl'), extra_fields=False, exact_order=False, extra_records=True)
should_validate_schema = True, should_validate_data_points = False
should_fail_on_extra_columns = True
empty_streams = {EmptyStreamConfiguration(name='ticket_pipelines', bypass_reason='Unable to populate'), EmptyStreamConfiguration(name=...eason='Unable to populate'), EmptyStreamConfiguration(name='engagements_meetings', bypass_reason='Unable to populate')}
ignored_fields = {'companies': [IgnoredFieldsConfiguration(name='properties/hs_time_*', bypass_reason='Hubspot time depend on current t...': [IgnoredFieldsConfiguration(name='properties/hs_time_*', bypass_reason='Hubspot time depend on current time')], ...}
expected_records_by_stream = defaultdict(<class 'list'>, {'campaigns': [{'id': 243851494, 'lastUpdatedTime': 1675121674226, 'appId': 113, 'appName'...-user-id': 12282590, 'timestamp': 1675256929766, 'selected': False, 'property': 'hs_count_is_unworked', 'vid': 2601}]})
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff87118b50>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
>       output = docker_runner.call_read(connector_config, configured_catalog)

connector_acceptance_test/tests/test_core.py:817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:96: in call_read
    output = list(self.run(cmd=cmd, config=config, catalog=catalog, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: dae3b5052f>
command = 'read --config /data/tap_config.json --catalog /data/catalog.json'
with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'read --config /data/tap_config.json --catalog /data/catalog.json' in image '<Image: 'airbyte/source-hubspot:dev'>' returned non-zero exit status 1: {"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679405882849.47, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "'NoneType' object has no attribute 'status_code'", "stack_trace": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 386, in _make_request\n    self._validate_conn(conn)\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 1042, in _validate_conn\n    conn.connect()\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connection.py\", line 419, in connect\n    self.sock = ssl_wrap_socket(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 449, in ssl_wrap_socket\n    ssl_sock = _ssl_wrap_socket_impl(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 493, in _ssl_wrap_socket_impl\n    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)\n  File \"/usr/local/lib/python3.9/ssl.py\", line 500, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/local/lib/python3.9/ssl.py\", line 1040, in _create\n    self.do_handshake()\n  File \"/usr/local/lib/python3.9/ssl.py\", line 1309, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLEOFError: EOF occurred in violation of protocol (_ssl.c:1129)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 787, in urlopen\n    retries = retries.increment(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/retry.py\", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 82, in _get_refresh_access_token_response\n    response = requests.request(method=\"POST\", url=self.get_token_refresh_endpoint(), data=self.build_refresh_request_body())\n  File \"/usr/local/lib/python3.9/site-packages/requests/api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/adapters.py\", line 514, in send\n    raise SSLError(e, request=request)\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 114, in read\n    stream_is_available, error = stream_instance.check_availability(logger, self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\", line 190, in check_availability\n    return self.availability_strategy.check_availability(self, logger, source)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\", line 45, in check_availability\n    get_first_record_for_slice(stream, stream_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\", line 38, in get_first_record_for_slice\n    return next(records_for_slice)\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 361, in read_records\n    response = self.handle_request(\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 292, in handle_request\n    headers=dict(request_headers, **self.authenticator.get_auth_header()),\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 33, in get_auth_header\n    return {\"Authorization\": f\"Bearer {self.get_access_token()}\"}\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 38, in get_access_token\n    token, expires_in = self.refresh_access_token()\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 98, in refresh_access_token\n    response_json = self._get_refresh_access_token_response()\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 86, in _get_refresh_access_token_response\n    if e.response.status_code == 429 or e.response.status_code >= 500:\nAttributeError: 'NoneType' object has no attribute 'status_code'\n", "failure_type": "system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "WARN", "message": "The configured catalog was built with the discovered catalog from which the following empty streams were removed: ticket_pipelines, form_submissions, engagements_calls, engagements_emails, quotes, engagements_meetings."}}
------------------------------ Captured log setup ------------------------------
WARNING  root:common.py:149 The configured catalog was built with the discovered catalog from which the following empty streams were removed: ticket_pipelines, form_submissions, engagements_calls, engagements_emails, quotes, engagements_meetings.
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\": \"TRACE\", \"trace\": {\"type\": \"ERROR\", \"emitted_at\": 1679405882849.47, \"error\": {\"message\": \"Something went wrong in the connector. See the logs for more details.\", \"internal_message\": \"'NoneType' object has no attribute 'status_code'\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\\\", line 703, in urlopen\\n    httplib_response = self._make_request(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\\\", line 386, in _make_request\\n    self._validate_conn(conn)\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\\\", line 1042, in _validate_conn\\n    conn.connect()\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connection.py\\\", line 419, in connect\\n    self.sock = ssl_wrap_socket(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\\\", line 449, in ssl_wrap_socket\\n    ssl_sock = _ssl_wrap_socket_impl(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\\\", line 493, in _ssl_wrap_socket_impl\\n    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)\\n  File \\\"/usr/local/lib/python3.9/ssl.py\\\", line 500, in wrap_socket\\n    return self.sslsocket_class._create(\\n  File \\\"/usr/local/lib/python3.9/ssl.py\\\", line 1040, in _create\\n    self.do_handshake()\\n  File \\\"/usr/local/lib/python3.9/ssl.py\\\", line 1309, in do_handshake\\n    self._sslobj.do_handshake()\\nssl.SSLEOFError: EOF occurred in violation of protocol (_ssl.c:1129)\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/adapters.py\\\", line 439, in send\\n    resp = conn.urlopen(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\\\", line 787, in urlopen\\n    retries = retries.increment(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/util/retry.py\\\", line 592, in increment\\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 82, in _get_refresh_access_token_response\\n    response = requests.request(method=\\\"POST\\\", url=self.get_token_refresh_endpoint(), data=self.build_refresh_request_body())\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/api.py\\\", line 61, in request\\n    return session.request(method=method, url=url, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 542, in request\\n    resp = self.send(prep, **send_kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 655, in send\\n    r = adapter.send(request, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/adapters.py\\\", line 514, in send\\n    raise SSLError(e, request=request)\\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"/airbyte/integration_code/main.py\\\", line 13, in <module>\\n    launch(source, sys.argv[1:])\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 131, in launch\\n    for message in source_entrypoint.run(parsed_args):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 122, in run\\n    for message in generator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 114, in read\\n    stream_is_available, error = stream_instance.check_availability(logger, self)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\\\", line 190, in check_availability\\n    return self.availability_strategy.check_availability(self, logger, source)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\\\", line 45, in check_availability\\n    get_first_record_for_slice(stream, stream_slice)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\\\", line 38, in get_first_record_for_slice\\n    return next(records_for_slice)\\n  File \\\"/airbyte/integration_code/source_hubspot/streams.py\\\", line 361, in read_records\\n    response = self.handle_request(\\n  File \\\"/airbyte/integration_code/source_hubspot/streams.py\\\", line 292, in handle_request\\n    headers=dict(request_headers, **self.authenticator.get_auth_header()),\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 33, in get_auth_header\\n    return {\\\"Authorization\\\": f\\\"Bearer {self.get_access_token()}\\\"}\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 38, in get_access_token\\n    token, expires_in = self.refresh_access_token()\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 98, in refresh_access_token\\n    response_json = self._get_refresh_access_token_response()\\n  File \\\"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\\\", line 94, in retry\\n    ret = target(*args, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 86, in _get_refresh_access_token_response\\n    if e.response.status_code == 429 or e.response.status_code >= 500:\\nAttributeError: 'NoneType' object has no attribute 'status_code'\\n\", \"failure_type\": \"system_error\"}}}\n"}}
------------------------------ Captured log call -------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679405882849.47, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "'NoneType' object has no attribute 'status_code'", "stack_trace": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 386, in _make_request\n    self._validate_conn(conn)\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 1042, in _validate_conn\n    conn.connect()\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connection.py\", line 419, in connect\n    self.sock = ssl_wrap_socket(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 449, in ssl_wrap_socket\n    ssl_sock = _ssl_wrap_socket_impl(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 493, in _ssl_wrap_socket_impl\n    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)\n  File \"/usr/local/lib/python3.9/ssl.py\", line 500, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/local/lib/python3.9/ssl.py\", line 1040, in _create\n    self.do_handshake()\n  File \"/usr/local/lib/python3.9/ssl.py\", line 1309, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLEOFError: EOF occurred in violation of protocol (_ssl.c:1129)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 787, in urlopen\n    retries = retries.increment(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/retry.py\", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 82, in _get_refresh_access_token_response\n    response = requests.request(method=\"POST\", url=self.get_token_refresh_endpoint(), data=self.build_refresh_request_body())\n  File \"/usr/local/lib/python3.9/site-packages/requests/api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/adapters.py\", line 514, in send\n    raise SSLError(e, request=request)\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 114, in read\n    stream_is_available, error = stream_instance.check_availability(logger, self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\", line 190, in check_availability\n    return self.availability_strategy.check_availability(self, logger, source)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\", line 45, in check_availability\n    get_first_record_for_slice(stream, stream_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\", line 38, in get_first_record_for_slice\n    return next(records_for_slice)\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 361, in read_records\n    response = self.handle_request(\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 292, in handle_request\n    headers=dict(request_headers, **self.authenticator.get_auth_header()),\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 33, in get_auth_header\n    return {\"Authorization\": f\"Bearer {self.get_access_token()}\"}\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 38, in get_access_token\n    token, expires_in = self.refresh_access_token()\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 98, in refresh_access_token\n    response_json = self._get_refresh_access_token_response()\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 86, in _get_refresh_access_token_response\n    if e.response.status_code == 429 or e.response.status_code >= 500:\nAttributeError: 'NoneType' object has no attribute 'status_code'\n", "failure_type": "system_error"}}}
_____________ TestIncremental.test_read_sequential_slices[inputs0] _____________

self = <connector_acceptance_test.tests.test_incremental.TestIncremental object at 0xffff86f11cd0>
inputs = IncrementalConfig(config_path='secrets/config_oauth.json', configured_catalog_path='sample_files/incremental_catalog.j...ng_streams=[], bypass_reason=None), timeout_seconds=None, threshold_days=0, skip_comprehensive_incremental_tests=False)
connector_config = SecretDict(******)
configured_catalog_for_incremental = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='companies', json_schema={'$schema...mental'>, cursor_field=['updatedAt'], destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
cursor_paths = {'companies': ['updatedAt'], 'contact_lists': ['updatedAt'], 'contacts': ['updatedAt'], 'deals': ['updatedAt'], ...}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff86f11a90>

    def test_read_sequential_slices(
        self, inputs: IncrementalConfig, connector_config, configured_catalog_for_incremental, cursor_paths, docker_runner: ConnectorRunner
    ):
        """
        Incremental test that makes calls to the read method without a state checkpoint. Then we partition the results by stream and
        slice checkpoints.
        Then we make additional read method calls using the state message and verify the correctness of the
        messages in the response.
        """
        if inputs.skip_comprehensive_incremental_tests:
            pytest.skip("Skipping new incremental test based on acceptance-test-config.yml")
            return
    
        threshold_days = getattr(inputs, "threshold_days") or 0
        stream_mapping = {stream.stream.name: stream for stream in configured_catalog_for_incremental.streams}
    
        output = docker_runner.call_read(connector_config, configured_catalog_for_incremental)
        records_1 = filter_output(output, type_=Type.RECORD)
        states_1 = filter_output(output, type_=Type.STATE)
    
        assert states_1, "Should produce at least one state"
        assert records_1, "Should produce at least one record"
    
        # For legacy state format, the final state message contains the final state of all streams. For per-stream state format,
        # the complete final state of streams must be assembled by going through all prior state messages received
        is_per_stream = is_per_stream_state(states_1[-1])
        if is_per_stream:
            latest_state = construct_latest_state_from_messages(states_1)
        else:
            latest_state = states_1[-1].state.data
    
        for record_value, state_value, stream_name in records_with_state(records_1, latest_state, stream_mapping, cursor_paths):
            assert (
                record_value <= state_value
            ), f"First incremental sync should produce records younger or equal to cursor value from the state. Stream: {stream_name}"
    
        checkpoint_messages = filter_output(output, type_=Type.STATE)
    
        # We sometimes have duplicate identical state messages in a stream which we can filter out to speed things up
        checkpoint_messages = [message for index, message in enumerate(checkpoint_messages) if message not in checkpoint_messages[:index]]
    
        # To avoid spamming APIs we only test a fraction of batches (10%) and enforce a minimum of 10 tested
        min_batches_to_test = 10
        sample_rate = len(checkpoint_messages) // min_batches_to_test
        stream_name_to_per_stream_state = dict()
        for idx, state_message in enumerate(checkpoint_messages):
            assert state_message.type == Type.STATE
            state_input, complete_state = self.get_next_state_input(state_message, stream_name_to_per_stream_state, is_per_stream)
    
            if len(checkpoint_messages) >= min_batches_to_test and idx % sample_rate != 0:
                continue
    
>           output = docker_runner.call_read_with_state(connector_config, configured_catalog_for_incremental, state=state_input)

connector_acceptance_test/tests/test_incremental.py:254: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:101: in call_read_with_state
    output = list(self.run(cmd=cmd, config=config, catalog=catalog, state=state, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: 9f6379caeb>
command = 'read --config /data/tap_config.json --catalog /data/catalog.json --state /data/state.json'
with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'read --config /data/tap_config.json --catalog /data/catalog.json --state /data/state.json' in image '<Image: 'airbyte/source-hubspot:dev'>' returned non-zero exit status 1: {"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679406351741.3599, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "'NoneType' object has no attribute 'status_code'", "stack_trace": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 386, in _make_request\n    self._validate_conn(conn)\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 1042, in _validate_conn\n    conn.connect()\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connection.py\", line 419, in connect\n    self.sock = ssl_wrap_socket(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 449, in ssl_wrap_socket\n    ssl_sock = _ssl_wrap_socket_impl(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 493, in _ssl_wrap_socket_impl\n    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)\n  File \"/usr/local/lib/python3.9/ssl.py\", line 500, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/local/lib/python3.9/ssl.py\", line 1040, in _create\n    self.do_handshake()\n  File \"/usr/local/lib/python3.9/ssl.py\", line 1309, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLEOFError: EOF occurred in violation of protocol (_ssl.c:1129)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 787, in urlopen\n    retries = retries.increment(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/retry.py\", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 82, in _get_refresh_access_token_response\n    response = requests.request(method=\"POST\", url=self.get_token_refresh_endpoint(), data=self.build_refresh_request_body())\n  File \"/usr/local/lib/python3.9/site-packages/requests/api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/adapters.py\", line 514, in send\n    raise SSLError(e, request=request)\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 114, in read\n    stream_is_available, error = stream_instance.check_availability(logger, self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\", line 190, in check_availability\n    return self.availability_strategy.check_availability(self, logger, source)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\", line 45, in check_availability\n    get_first_record_for_slice(stream, stream_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\", line 38, in get_first_record_for_slice\n    return next(records_for_slice)\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 931, in read_records\n    records, raw_response = self._read_stream_records(\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 329, in _read_stream_records\n    properties = self._property_wrapper\n  File \"/usr/local/lib/python3.9/functools.py\", line 993, in __get__\n    val = self.func(instance)\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 243, in _property_wrapper\n    properties = list(self.properties.keys())\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 634, in properties\n    data, response = self._api.get(f\"/properties/v2/{self.entity}/properties\")\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry\n    ret = target(*args, **kwargs)\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 180, in get\n    response = self._session.get(self.BASE_URL + url, params=params)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 528, in request\n    prep = self.prepare_request(req)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 456, in prepare_request\n    p.prepare(\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 320, in prepare\n    self.prepare_auth(auth, url)\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 556, in prepare_auth\n    r = auth(self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 28, in __call__\n    request.headers.update(self.get_auth_header())\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 33, in get_auth_header\n    return {\"Authorization\": f\"Bearer {self.get_access_token()}\"}\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 38, in get_access_token\n    token, expires_in = self.refresh_access_token()\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 98, in refresh_access_token\n    response_json = self._get_refresh_access_token_response()\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 86, in _get_refresh_access_token_response\n    if e.response.status_code == 429 or e.response.status_code >= 500:\nAttributeError: 'NoneType' object has no attribute 'status_code'\n", "failure_type": "system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\": \"TRACE\", \"trace\": {\"type\": \"ERROR\", \"emitted_at\": 1679406351741.3599, \"error\": {\"message\": \"Something went wrong in the connector. See the logs for more details.\", \"internal_message\": \"'NoneType' object has no attribute 'status_code'\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\\\", line 703, in urlopen\\n    httplib_response = self._make_request(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\\\", line 386, in _make_request\\n    self._validate_conn(conn)\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\\\", line 1042, in _validate_conn\\n    conn.connect()\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connection.py\\\", line 419, in connect\\n    self.sock = ssl_wrap_socket(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\\\", line 449, in ssl_wrap_socket\\n    ssl_sock = _ssl_wrap_socket_impl(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\\\", line 493, in _ssl_wrap_socket_impl\\n    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)\\n  File \\\"/usr/local/lib/python3.9/ssl.py\\\", line 500, in wrap_socket\\n    return self.sslsocket_class._create(\\n  File \\\"/usr/local/lib/python3.9/ssl.py\\\", line 1040, in _create\\n    self.do_handshake()\\n  File \\\"/usr/local/lib/python3.9/ssl.py\\\", line 1309, in do_handshake\\n    self._sslobj.do_handshake()\\nssl.SSLEOFError: EOF occurred in violation of protocol (_ssl.c:1129)\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/adapters.py\\\", line 439, in send\\n    resp = conn.urlopen(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\\\", line 787, in urlopen\\n    retries = retries.increment(\\n  File \\\"/usr/local/lib/python3.9/site-packages/urllib3/util/retry.py\\\", line 592, in increment\\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 82, in _get_refresh_access_token_response\\n    response = requests.request(method=\\\"POST\\\", url=self.get_token_refresh_endpoint(), data=self.build_refresh_request_body())\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/api.py\\\", line 61, in request\\n    return session.request(method=method, url=url, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 542, in request\\n    resp = self.send(prep, **send_kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 655, in send\\n    r = adapter.send(request, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/adapters.py\\\", line 514, in send\\n    raise SSLError(e, request=request)\\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\\n\\nDuring handling of the above exception, another exception occurred:\\n\\nTraceback (most recent call last):\\n  File \\\"/airbyte/integration_code/main.py\\\", line 13, in <module>\\n    launch(source, sys.argv[1:])\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 131, in launch\\n    for message in source_entrypoint.run(parsed_args):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 122, in run\\n    for message in generator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 114, in read\\n    stream_is_available, error = stream_instance.check_availability(logger, self)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\\\", line 190, in check_availability\\n    return self.availability_strategy.check_availability(self, logger, source)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\\\", line 45, in check_availability\\n    get_first_record_for_slice(stream, stream_slice)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\\\", line 38, in get_first_record_for_slice\\n    return next(records_for_slice)\\n  File \\\"/airbyte/integration_code/source_hubspot/streams.py\\\", line 931, in read_records\\n    records, raw_response = self._read_stream_records(\\n  File \\\"/airbyte/integration_code/source_hubspot/streams.py\\\", line 329, in _read_stream_records\\n    properties = self._property_wrapper\\n  File \\\"/usr/local/lib/python3.9/functools.py\\\", line 993, in __get__\\n    val = self.func(instance)\\n  File \\\"/airbyte/integration_code/source_hubspot/streams.py\\\", line 243, in _property_wrapper\\n    properties = list(self.properties.keys())\\n  File \\\"/airbyte/integration_code/source_hubspot/streams.py\\\", line 634, in properties\\n    data, response = self._api.get(f\\\"/properties/v2/{self.entity}/properties\\\")\\n  File \\\"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\\\", line 94, in retry\\n    ret = target(*args, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\\\", line 94, in retry\\n    ret = target(*args, **kwargs)\\n  File \\\"/airbyte/integration_code/source_hubspot/streams.py\\\", line 180, in get\\n    response = self._session.get(self.BASE_URL + url, params=params)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 555, in get\\n    return self.request('GET', url, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 528, in request\\n    prep = self.prepare_request(req)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 456, in prepare_request\\n    p.prepare(\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/models.py\\\", line 320, in prepare\\n    self.prepare_auth(auth, url)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/models.py\\\", line 556, in prepare_auth\\n    r = auth(self)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 28, in __call__\\n    request.headers.update(self.get_auth_header())\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 33, in get_auth_header\\n    return {\\\"Authorization\\\": f\\\"Bearer {self.get_access_token()}\\\"}\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 38, in get_access_token\\n    token, expires_in = self.refresh_access_token()\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 98, in refresh_access_token\\n    response_json = self._get_refresh_access_token_response()\\n  File \\\"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\\\", line 94, in retry\\n    ret = target(*args, **kwargs)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 86, in _get_refresh_access_token_response\\n    if e.response.status_code == 429 or e.response.status_code >= 500:\\nAttributeError: 'NoneType' object has no attribute 'status_code'\\n\", \"failure_type\": \"system_error\"}}}\n"}}
------------------------------ Captured log call -------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679406351741.3599, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "'NoneType' object has no attribute 'status_code'", "stack_trace": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 703, in urlopen\n    httplib_response = self._make_request(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 386, in _make_request\n    self._validate_conn(conn)\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 1042, in _validate_conn\n    conn.connect()\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connection.py\", line 419, in connect\n    self.sock = ssl_wrap_socket(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 449, in ssl_wrap_socket\n    ssl_sock = _ssl_wrap_socket_impl(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/ssl_.py\", line 493, in _ssl_wrap_socket_impl\n    return ssl_context.wrap_socket(sock, server_hostname=server_hostname)\n  File \"/usr/local/lib/python3.9/ssl.py\", line 500, in wrap_socket\n    return self.sslsocket_class._create(\n  File \"/usr/local/lib/python3.9/ssl.py\", line 1040, in _create\n    self.do_handshake()\n  File \"/usr/local/lib/python3.9/ssl.py\", line 1309, in do_handshake\n    self._sslobj.do_handshake()\nssl.SSLEOFError: EOF occurred in violation of protocol (_ssl.c:1129)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/requests/adapters.py\", line 439, in send\n    resp = conn.urlopen(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/connectionpool.py\", line 787, in urlopen\n    retries = retries.increment(\n  File \"/usr/local/lib/python3.9/site-packages/urllib3/util/retry.py\", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 82, in _get_refresh_access_token_response\n    response = requests.request(method=\"POST\", url=self.get_token_refresh_endpoint(), data=self.build_refresh_request_body())\n  File \"/usr/local/lib/python3.9/site-packages/requests/api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 542, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 655, in send\n    r = adapter.send(request, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/adapters.py\", line 514, in send\n    raise SSLError(e, request=request)\nrequests.exceptions.SSLError: HTTPSConnectionPool(host='api.hubapi.com', port=443): Max retries exceeded with url: /oauth/v1/token (Caused by SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1129)')))\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 114, in read\n    stream_is_available, error = stream_instance.check_availability(logger, self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\", line 190, in check_availability\n    return self.availability_strategy.check_availability(self, logger, source)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\", line 45, in check_availability\n    get_first_record_for_slice(stream, stream_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\", line 38, in get_first_record_for_slice\n    return next(records_for_slice)\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 931, in read_records\n    records, raw_response = self._read_stream_records(\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 329, in _read_stream_records\n    properties = self._property_wrapper\n  File \"/usr/local/lib/python3.9/functools.py\", line 993, in __get__\n    val = self.func(instance)\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 243, in _property_wrapper\n    properties = list(self.properties.keys())\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 634, in properties\n    data, response = self._api.get(f\"/properties/v2/{self.entity}/properties\")\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry\n    ret = target(*args, **kwargs)\n  File \"/airbyte/integration_code/source_hubspot/streams.py\", line 180, in get\n    response = self._session.get(self.BASE_URL + url, params=params)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 555, in get\n    return self.request('GET', url, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 528, in request\n    prep = self.prepare_request(req)\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 456, in prepare_request\n    p.prepare(\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 320, in prepare\n    self.prepare_auth(auth, url)\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 556, in prepare_auth\n    r = auth(self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 28, in __call__\n    request.headers.update(self.get_auth_header())\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 33, in get_auth_header\n    return {\"Authorization\": f\"Bearer {self.get_access_token()}\"}\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 38, in get_access_token\n    token, expires_in = self.refresh_access_token()\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 98, in refresh_access_token\n    response_json = self._get_refresh_access_token_response()\n  File \"/usr/local/lib/python3.9/site-packages/backoff/_sync.py\", line 94, in retry\n    ret = target(*args, **kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 86, in _get_refresh_access_token_response\n    if e.response.status_code == 429 or e.response.status_code >= 500:\nAttributeError: 'NoneType' object has no attribute 'status_code'\n", "failure_type": "system_error"}}}
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - doc...
FAILED ../../test_input/test_incremental.py::TestIncremental::test_read_sequential_slices[inputs0]
================= 2 failed, 37 deselected in 534.65s (0:08:54) =================
