../../../../connectors/source-xero/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-xero
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
collected 37 items / 35 deselected / 2 selected

../../test_input/test_core.py F                                          [ 50%]
../../test_input/test_incremental.py F                                   [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffff8082b310>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='bank_transactions', json_schema={...: 'full_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
expect_records_config = None, should_validate_schema = True
should_validate_data_points = False, should_fail_on_extra_columns = True
empty_streams = {EmptyStreamConfiguration(name='overpayments', bypass_reason=None), EmptyStreamConfiguration(name='purchase_orders', b...nfiguration(name='prepayments', bypass_reason=None), EmptyStreamConfiguration(name='credit_notes', bypass_reason=None)}
ignored_fields = {}, expected_records_by_stream = {}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff807dd190>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
>       output = docker_runner.call_read(connector_config, configured_catalog)

connector_acceptance_test/tests/test_core.py:817: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:96: in call_read
    output = list(self.run(cmd=cmd, config=config, catalog=catalog, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: 52a4682319>
command = 'read --config /data/tap_config.json --catalog /data/catalog.json'
with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'read --config /data/tap_config.json --catalog /data/catalog.json' in image '<Image: 'airbyte/source-xero:dev'>' returned non-zero exit status 1: {"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679429233079.446, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'", "stack_trace": "Traceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 114, in read\n    stream_is_available, error = stream_instance.check_availability(logger, self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\", line 190, in check_availability\n    return self.availability_strategy.check_availability(self, logger, source)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\", line 45, in check_availability\n    get_first_record_for_slice(stream, stream_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\", line 38, in get_first_record_for_slice\n    return next(records_for_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 419, in read_records\n    yield from self._read_pages(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 435, in _read_pages\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 449, in _fetch_next_page\n    request = self._create_prepared_request(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 280, in _create_prepared_request\n    return self._session.prepare_request(requests.Request(**args))\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 484, in prepare_request\n    p.prepare(\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 372, in prepare\n    self.prepare_auth(auth, url)\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 603, in prepare_auth\n    r = auth(self)\n  File \"/airbyte/integration_code/source_xero/oauth.py\", line 43, in __call__\n    request.headers.update(self.get_auth_header())\n  File \"/airbyte/integration_code/source_xero/oauth.py\", line 47, in get_auth_header\n    return {\"Authorization\": f\"Bearer {self.get_access_token()}\"}\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 40, in get_access_token\n    self.set_token_expiry_date(expires_in)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/oauth.py\", line 79, in set_token_expiry_date\n    if self._token_expiry_date_format:\nAttributeError: 'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'\n", "failure_type": "system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
------------------------------ Captured log setup ------------------------------
WARNING  root:config.py:282 The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\": \"TRACE\", \"trace\": {\"type\": \"ERROR\", \"emitted_at\": 1679429233079.446, \"error\": {\"message\": \"Something went wrong in the connector. See the logs for more details.\", \"internal_message\": \"'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/airbyte/integration_code/main.py\\\", line 13, in <module>\\n    launch(source, sys.argv[1:])\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 131, in launch\\n    for message in source_entrypoint.run(parsed_args):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 122, in run\\n    for message in generator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 114, in read\\n    stream_is_available, error = stream_instance.check_availability(logger, self)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\\\", line 190, in check_availability\\n    return self.availability_strategy.check_availability(self, logger, source)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\\\", line 45, in check_availability\\n    get_first_record_for_slice(stream, stream_slice)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\\\", line 38, in get_first_record_for_slice\\n    return next(records_for_slice)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 419, in read_records\\n    yield from self._read_pages(\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 435, in _read_pages\\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 449, in _fetch_next_page\\n    request = self._create_prepared_request(\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 280, in _create_prepared_request\\n    return self._session.prepare_request(requests.Request(**args))\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 484, in prepare_request\\n    p.prepare(\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/models.py\\\", line 372, in prepare\\n    self.prepare_auth(auth, url)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/models.py\\\", line 603, in prepare_auth\\n    r = auth(self)\\n  File \\\"/airbyte/integration_code/source_xero/oauth.py\\\", line 43, in __call__\\n    request.headers.update(self.get_auth_header())\\n  File \\\"/airbyte/integration_code/source_xero/oauth.py\\\", line 47, in get_auth_header\\n    return {\\\"Authorization\\\": f\\\"Bearer {self.get_access_token()}\\\"}\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 40, in get_access_token\\n    self.set_token_expiry_date(expires_in)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/oauth.py\\\", line 79, in set_token_expiry_date\\n    if self._token_expiry_date_format:\\nAttributeError: 'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'\\n\", \"failure_type\": \"system_error\"}}}\n"}}
------------------------------ Captured log call -------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679429233079.446, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'", "stack_trace": "Traceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 114, in read\n    stream_is_available, error = stream_instance.check_availability(logger, self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\", line 190, in check_availability\n    return self.availability_strategy.check_availability(self, logger, source)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\", line 45, in check_availability\n    get_first_record_for_slice(stream, stream_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\", line 38, in get_first_record_for_slice\n    return next(records_for_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 419, in read_records\n    yield from self._read_pages(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 435, in _read_pages\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 449, in _fetch_next_page\n    request = self._create_prepared_request(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 280, in _create_prepared_request\n    return self._session.prepare_request(requests.Request(**args))\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 484, in prepare_request\n    p.prepare(\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 372, in prepare\n    self.prepare_auth(auth, url)\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 603, in prepare_auth\n    r = auth(self)\n  File \"/airbyte/integration_code/source_xero/oauth.py\", line 43, in __call__\n    request.headers.update(self.get_auth_header())\n  File \"/airbyte/integration_code/source_xero/oauth.py\", line 47, in get_auth_header\n    return {\"Authorization\": f\"Bearer {self.get_access_token()}\"}\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 40, in get_access_token\n    self.set_token_expiry_date(expires_in)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/oauth.py\", line 79, in set_token_expiry_date\n    if self._token_expiry_date_format:\nAttributeError: 'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'\n", "failure_type": "system_error"}}}
_____________ TestIncremental.test_read_sequential_slices[inputs0] _____________

self = <connector_acceptance_test.tests.test_incremental.TestIncremental object at 0xffff804d9130>
inputs = IncrementalConfig(config_path='integration_tests/sample_config.json', configured_catalog_path='integration_tests/confi...ng_streams=[], bypass_reason=None), timeout_seconds=None, threshold_days=0, skip_comprehensive_incremental_tests=False)
connector_config = SecretDict(******)
configured_catalog_for_incremental = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='bank_transactions', json_schema={...l'>, cursor_field=['UpdatedDateUTC'], destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
cursor_paths = {'accounts': ['UpdatedDateUTC'], 'bank_transactions': ['UpdatedDateUTC'], 'bank_transfers': ['CreatedDateUTC'], 'contacts': ['UpdatedDateUTC'], ...}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff804d9a90>

    def test_read_sequential_slices(
        self, inputs: IncrementalConfig, connector_config, configured_catalog_for_incremental, cursor_paths, docker_runner: ConnectorRunner
    ):
        """
        Incremental test that makes calls to the read method without a state checkpoint. Then we partition the results by stream and
        slice checkpoints.
        Then we make additional read method calls using the state message and verify the correctness of the
        messages in the response.
        """
        if inputs.skip_comprehensive_incremental_tests:
            pytest.skip("Skipping new incremental test based on acceptance-test-config.yml")
            return
    
        threshold_days = getattr(inputs, "threshold_days") or 0
        stream_mapping = {stream.stream.name: stream for stream in configured_catalog_for_incremental.streams}
    
>       output = docker_runner.call_read(connector_config, configured_catalog_for_incremental)

connector_acceptance_test/tests/test_incremental.py:218: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/utils/connector_runner.py:96: in call_read
    output = list(self.run(cmd=cmd, config=config, catalog=catalog, **kwargs))
connector_acceptance_test/utils/connector_runner.py:120: in run
    for line in self.read(container, command=cmd, with_ext=raise_container_error):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'connector_acceptance_test.utils.connector_runner.ConnectorRunner'>
container = <Container: a155c55561>
command = 'read --config /data/tap_config.json --catalog /data/catalog.json'
with_ext = True

    @classmethod
    def read(cls, container: Container, command: str = None, with_ext: bool = True) -> Iterable[str]:
        """Reads connector's logs per line"""
        buffer = b""
        exception = ""
        line = ""
        for chunk in container.logs(stdout=True, stderr=True, stream=True, follow=True):
    
            buffer += chunk
            while True:
                # every chunk can include several lines
                found = buffer.find(b"\n")
                if found <= -1:
                    break
    
                line = buffer[: found + 1].decode("utf-8")
                if len(exception) > 0 or line.startswith("Traceback (most recent call last)"):
                    exception += line
                else:
                    yield line
                buffer = buffer[found + 1 :]
    
        if buffer:
            # send the latest chunk if exists
            line = buffer.decode("utf-8")
            if exception:
                exception += line
            else:
                yield line
        try:
            exit_status = container.wait()
            container.remove()
        except NotFound as err:
            logging.error(f"Waiting error: {err}, logs: {exception or line}")
            raise
        if exit_status["StatusCode"]:
            error = exit_status.get("Error") or exception or line
            logging.error(f"Docker container failed, " f'code {exit_status["StatusCode"]}, error:\n{error}')
            if with_ext:
>               raise ContainerError(
                    container=container,
                    exit_status=exit_status["StatusCode"],
                    command=command,
                    image=container.image,
                    stderr=error,
                )
E               docker.errors.ContainerError: Command 'read --config /data/tap_config.json --catalog /data/catalog.json' in image '<Image: 'airbyte/source-xero:dev'>' returned non-zero exit status 1: {"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679429234762.362, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'", "stack_trace": "Traceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 114, in read\n    stream_is_available, error = stream_instance.check_availability(logger, self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\", line 190, in check_availability\n    return self.availability_strategy.check_availability(self, logger, source)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\", line 45, in check_availability\n    get_first_record_for_slice(stream, stream_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\", line 38, in get_first_record_for_slice\n    return next(records_for_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 419, in read_records\n    yield from self._read_pages(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 435, in _read_pages\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 449, in _fetch_next_page\n    request = self._create_prepared_request(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 280, in _create_prepared_request\n    return self._session.prepare_request(requests.Request(**args))\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 484, in prepare_request\n    p.prepare(\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 372, in prepare\n    self.prepare_auth(auth, url)\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 603, in prepare_auth\n    r = auth(self)\n  File \"/airbyte/integration_code/source_xero/oauth.py\", line 43, in __call__\n    request.headers.update(self.get_auth_header())\n  File \"/airbyte/integration_code/source_xero/oauth.py\", line 47, in get_auth_header\n    return {\"Authorization\": f\"Bearer {self.get_access_token()}\"}\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 40, in get_access_token\n    self.set_token_expiry_date(expires_in)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/oauth.py\", line 79, in set_token_expiry_date\n    if self._token_expiry_date_format:\nAttributeError: 'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'\n", "failure_type": "system_error"}}}

connector_acceptance_test/utils/connector_runner.py:174: ContainerError
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "Docker container failed, code 1, error:\n{\"type\": \"TRACE\", \"trace\": {\"type\": \"ERROR\", \"emitted_at\": 1679429234762.362, \"error\": {\"message\": \"Something went wrong in the connector. See the logs for more details.\", \"internal_message\": \"'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'\", \"stack_trace\": \"Traceback (most recent call last):\\n  File \\\"/airbyte/integration_code/main.py\\\", line 13, in <module>\\n    launch(source, sys.argv[1:])\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 131, in launch\\n    for message in source_entrypoint.run(parsed_args):\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\\\", line 122, in run\\n    for message in generator:\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\\\", line 114, in read\\n    stream_is_available, error = stream_instance.check_availability(logger, self)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\\\", line 190, in check_availability\\n    return self.availability_strategy.check_availability(self, logger, source)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\\\", line 45, in check_availability\\n    get_first_record_for_slice(stream, stream_slice)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\\\", line 38, in get_first_record_for_slice\\n    return next(records_for_slice)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 419, in read_records\\n    yield from self._read_pages(\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 435, in _read_pages\\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 449, in _fetch_next_page\\n    request = self._create_prepared_request(\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\\\", line 280, in _create_prepared_request\\n    return self._session.prepare_request(requests.Request(**args))\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/sessions.py\\\", line 484, in prepare_request\\n    p.prepare(\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/models.py\\\", line 372, in prepare\\n    self.prepare_auth(auth, url)\\n  File \\\"/usr/local/lib/python3.9/site-packages/requests/models.py\\\", line 603, in prepare_auth\\n    r = auth(self)\\n  File \\\"/airbyte/integration_code/source_xero/oauth.py\\\", line 43, in __call__\\n    request.headers.update(self.get_auth_header())\\n  File \\\"/airbyte/integration_code/source_xero/oauth.py\\\", line 47, in get_auth_header\\n    return {\\\"Authorization\\\": f\\\"Bearer {self.get_access_token()}\\\"}\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\\\", line 40, in get_access_token\\n    self.set_token_expiry_date(expires_in)\\n  File \\\"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/oauth.py\\\", line 79, in set_token_expiry_date\\n    if self._token_expiry_date_format:\\nAttributeError: 'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'\\n\", \"failure_type\": \"system_error\"}}}\n"}}
------------------------------ Captured log call -------------------------------
ERROR    root:connector_runner.py:172 Docker container failed, code 1, error:
{"type": "TRACE", "trace": {"type": "ERROR", "emitted_at": 1679429234762.362, "error": {"message": "Something went wrong in the connector. See the logs for more details.", "internal_message": "'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'", "stack_trace": "Traceback (most recent call last):\n  File \"/airbyte/integration_code/main.py\", line 13, in <module>\n    launch(source, sys.argv[1:])\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 131, in launch\n    for message in source_entrypoint.run(parsed_args):\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/entrypoint.py\", line 122, in run\n    for message in generator:\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/abstract_source.py\", line 114, in read\n    stream_is_available, error = stream_instance.check_availability(logger, self)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/core.py\", line 190, in check_availability\n    return self.availability_strategy.check_availability(self, logger, source)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/availability_strategy.py\", line 45, in check_availability\n    get_first_record_for_slice(stream, stream_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/utils/stream_helper.py\", line 38, in get_first_record_for_slice\n    return next(records_for_slice)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 419, in read_records\n    yield from self._read_pages(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 435, in _read_pages\n    request, response = self._fetch_next_page(stream_slice, stream_state, next_page_token)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 449, in _fetch_next_page\n    request = self._create_prepared_request(\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/http.py\", line 280, in _create_prepared_request\n    return self._session.prepare_request(requests.Request(**args))\n  File \"/usr/local/lib/python3.9/site-packages/requests/sessions.py\", line 484, in prepare_request\n    p.prepare(\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 372, in prepare\n    self.prepare_auth(auth, url)\n  File \"/usr/local/lib/python3.9/site-packages/requests/models.py\", line 603, in prepare_auth\n    r = auth(self)\n  File \"/airbyte/integration_code/source_xero/oauth.py\", line 43, in __call__\n    request.headers.update(self.get_auth_header())\n  File \"/airbyte/integration_code/source_xero/oauth.py\", line 47, in get_auth_header\n    return {\"Authorization\": f\"Bearer {self.get_access_token()}\"}\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/abstract_oauth.py\", line 40, in get_access_token\n    self.set_token_expiry_date(expires_in)\n  File \"/usr/local/lib/python3.9/site-packages/airbyte_cdk/sources/streams/http/requests_native_auth/oauth.py\", line 79, in set_token_expiry_date\n    if self._token_expiry_date_format:\nAttributeError: 'XeroCustomConnectionsOauth2Authenticator' object has no attribute '_token_expiry_date_format'\n", "failure_type": "system_error"}}}
=============================== warnings summary ===============================
connector_acceptance_test/config.py:282: 36 warnings
test_core.py: 1 warning
  /airbyte/connector_acceptance_test/connector_acceptance_test/config.py:282: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
    logging.warn("The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.")

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - doc...
FAILED ../../test_input/test_incremental.py::TestIncremental::test_read_sequential_slices[inputs0]
================ 2 failed, 35 deselected, 37 warnings in 6.55s =================
