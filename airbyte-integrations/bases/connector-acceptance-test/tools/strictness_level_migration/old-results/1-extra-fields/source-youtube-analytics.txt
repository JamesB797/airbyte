../../../../connectors/source-youtube-analytics/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-youtube-analytics
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
collected 37 items / 35 deselected / 2 selected

../../test_input/test_core.py F                                          [ 50%]
../../test_input/test_incremental.py .                                   [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffff9e5f4df0>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='channel_annotations_a1', json_sch...l: 'incremental'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
expect_records_config = None, should_validate_schema = True
should_validate_data_points = False, should_fail_on_extra_columns = True
empty_streams = {EmptyStreamConfiguration(name='channel_province_a2', bypass_reason=None), EmptyStreamConfiguration(name='channel_card...end_screens_a1', bypass_reason=None), EmptyStreamConfiguration(name='channel_annotations_a1', bypass_reason=None), ...}
ignored_fields = {}, expected_records_by_stream = {}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff9e60c370>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
        output = docker_runner.call_read(connector_config, configured_catalog)
        records = [message.record for message in filter_output(output, Type.RECORD)]
    
        assert records, "At least one record should be read using provided catalog"
    
        if should_validate_schema:  # TODO Conditional logic
>           self._validate_schema(
                records=records, configured_catalog=configured_catalog, fail_on_extra_columns=should_fail_on_extra_columns
            )

connector_acceptance_test/tests/test_core.py:823: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

records = [AirbyteRecordMessage(namespace=None, stream='channel_basic_a2', data={'date': 20230311, 'channel_id': 'UCybpwL6sPt6SS... 0, 'videos_removed_from_playlists': 0, 'red_views': 0, 'red_watch_time_minutes': 0.0}, emitted_at=1679429234140), ...]
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='channel_annotations_a1', json_sch...l: 'incremental'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
fail_on_extra_columns = True

    @staticmethod
    def _validate_schema(records: List[AirbyteRecordMessage], configured_catalog: ConfiguredAirbyteCatalog, fail_on_extra_columns: Boolean):
        """
        Check if data type and structure in records matches the one in json_schema of the stream in catalog
        """
        TestBasicRead._validate_records_structure(records, configured_catalog)
        bar = "-" * 80
        streams_errors = verify_records_schema(records, configured_catalog, fail_on_extra_columns)
        for stream_name, errors in streams_errors.items():
            errors = map(str, errors.values())
            str_errors = f"\n{bar}\n".join(errors)
            logging.error(f"\nThe {stream_name} stream has the following schema errors:\n{str_errors}")
    
        if streams_errors:
>           pytest.fail(f"Please check your json_schema in selected streams {tuple(streams_errors.keys())}.")
E           Failed: Please check your json_schema in selected streams ('channel_subtitles_a2',).

connector_acceptance_test/tests/test_core.py:665: Failed
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
------------------------------ Captured log setup ------------------------------
WARNING  root:config.py:282 The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe channel_subtitles_a2 stream has the following schema errors:\nAdditional properties are not allowed ('subtitle_language_autotranslated' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'properties': {'average_view_duration_percentage': {'type': ['null',\n                                                                  'number']},\n                    'average_view_duration_seconds': {'type': ['null',\n                                                               'number']},\n                    'channel_id': {'type': ['null', 'string']},\n                    'country_code': {'type': ['null', 'string']},\n                    'date': {'type': 'integer'},\n                    'live_or_on_demand': {'type': ['null', 'string']},\n                    'red_views': {'type': ['null', 'integer']},\n                    'red_watch_time_minutes': {'type': ['null', 'number']},\n                    'subscribed_status': {'type': ['null', 'string']},\n                    'subtitle_language': {'type': ['null', 'string']},\n                    'video_id': {'type': ['null', 'string']},\n                    'views': {'type': ['null', 'integer']},\n                    'watch_time_minutes': {'type': ['null', 'number']}},\n     'type': 'object'}\n\nOn instance:\n    {'average_view_duration_percentage': 11.595,\n     'average_view_duration_seconds': 4.638,\n     'channel_id': 'UCybpwL6sPt6SSzazIV400WQ',\n     'country_code': 'PT',\n     'date': 20230318,\n     'live_or_on_demand': 'on_demand',\n     'red_views': 0,\n     'red_watch_time_minutes': 0.0,\n     'subscribed_status': 'unknown',\n     'subtitle_language': '',\n     'subtitle_language_autotranslated': '',\n     'video_id': 'GyomEw5a2NQ',\n     'views': 1,\n     'watch_time_minutes': 0.0773}"}}
------------------------------ Captured log call -------------------------------
ERROR    root:test_core.py:662 
The channel_subtitles_a2 stream has the following schema errors:
Additional properties are not allowed ('subtitle_language_autotranslated' was unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/draft-07/schema#',
     'additionalProperties': False,
     'properties': {'average_view_duration_percentage': {'type': ['null',
                                                                  'number']},
                    'average_view_duration_seconds': {'type': ['null',
                                                               'number']},
                    'channel_id': {'type': ['null', 'string']},
                    'country_code': {'type': ['null', 'string']},
                    'date': {'type': 'integer'},
                    'live_or_on_demand': {'type': ['null', 'string']},
                    'red_views': {'type': ['null', 'integer']},
                    'red_watch_time_minutes': {'type': ['null', 'number']},
                    'subscribed_status': {'type': ['null', 'string']},
                    'subtitle_language': {'type': ['null', 'string']},
                    'video_id': {'type': ['null', 'string']},
                    'views': {'type': ['null', 'integer']},
                    'watch_time_minutes': {'type': ['null', 'number']}},
     'type': 'object'}

On instance:
    {'average_view_duration_percentage': 11.595,
     'average_view_duration_seconds': 4.638,
     'channel_id': 'UCybpwL6sPt6SSzazIV400WQ',
     'country_code': 'PT',
     'date': 20230318,
     'live_or_on_demand': 'on_demand',
     'red_views': 0,
     'red_watch_time_minutes': 0.0,
     'subscribed_status': 'unknown',
     'subtitle_language': '',
     'subtitle_language_autotranslated': '',
     'video_id': 'GyomEw5a2NQ',
     'views': 1,
     'watch_time_minutes': 0.0773}
=============================== warnings summary ===============================
connector_acceptance_test/config.py:282: 36 warnings
test_core.py: 1 warning
  /airbyte/connector_acceptance_test/connector_acceptance_test/config.py:282: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
    logging.warn("The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.")

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - Fai...
===== 1 failed, 1 passed, 35 deselected, 37 warnings in 2919.53s (0:48:39) =====
