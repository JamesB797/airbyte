../../../../connectors/source-rki-covid/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-rki-covid
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
collected 36 items / 34 deselected / 2 selected

../../test_input/test_core.py F                                          [ 50%]
../../test_input/test_incremental.py .                                   [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffffa3e45610>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='germany', json_schema={'$schema':...esh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.append_dedup: 'append_dedup'>, primary_key=None)])
expect_records_config = None, should_validate_schema = True
should_validate_data_points = False, should_fail_on_extra_columns = True
empty_streams = {EmptyStreamConfiguration(name='germany_age_groups', bypass_reason=None), EmptyStreamConfiguration(name='germany', byp...frozen_incidence', bypass_reason=None), EmptyStreamConfiguration(name='germany_states_age_groups', bypass_reason=None)}
ignored_fields = {}, expected_records_by_stream = {}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffffa3ead700>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
        output = docker_runner.call_read(connector_config, configured_catalog)
        records = [message.record for message in filter_output(output, Type.RECORD)]
    
        assert records, "At least one record should be read using provided catalog"
    
        if should_validate_schema:  # TODO Conditional logic
>           self._validate_schema(
                records=records, configured_catalog=configured_catalog, fail_on_extra_columns=should_fail_on_extra_columns
            )

connector_acceptance_test/tests/test_core.py:823: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

records = [AirbyteRecordMessage(namespace=None, stream='germany', data={'cases': 38306781, 'deaths': 169802, 'recovered': 379672...eam='germany_history_cases', data={'cases': 14316, 'date': '2021-01-04T00:00:00.000Z'}, emitted_at=1679409115372), ...]
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='germany', json_schema={'$schema':...esh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.append_dedup: 'append_dedup'>, primary_key=None)])
fail_on_extra_columns = True

    @staticmethod
    def _validate_schema(records: List[AirbyteRecordMessage], configured_catalog: ConfiguredAirbyteCatalog, fail_on_extra_columns: Boolean):
        """
        Check if data type and structure in records matches the one in json_schema of the stream in catalog
        """
        TestBasicRead._validate_records_structure(records, configured_catalog)
        bar = "-" * 80
        streams_errors = verify_records_schema(records, configured_catalog, fail_on_extra_columns)
        for stream_name, errors in streams_errors.items():
            errors = map(str, errors.values())
            str_errors = f"\n{bar}\n".join(errors)
            logging.error(f"\nThe {stream_name} stream has the following schema errors:\n{str_errors}")
    
        if streams_errors:
>           pytest.fail(f"Please check your json_schema in selected streams {tuple(streams_errors.keys())}.")
E           Failed: Please check your json_schema in selected streams ('germany', 'german_history_frozen_incidence').

connector_acceptance_test/tests/test_core.py:665: Failed
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
------------------------------ Captured log setup ------------------------------
WARNING  root:config.py:282 The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe germany stream has the following schema errors:\nAdditional properties are not allowed ('deathsPerWeek' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/schema#',\n     'additionalProperties': False,\n     'properties': {'cases': {'type': 'integer'},\n                    'casesPer100k': {'type': 'number'},\n                    'casesPerWeek': {'type': 'integer'},\n                    'deaths': {'type': 'integer'},\n                    'delta': {'properties': {'cases': {'type': 'integer'},\n                                             'deaths': {'type': 'integer'},\n                                             'recovered': {'type': 'integer'}},\n                              'required': ['cases', 'deaths', 'recovered'],\n                              'type': 'object'},\n                    'hospitalization': {'properties': {'cases7Days': {'type': 'integer'},\n                                                       'date': {'type': 'string'},\n                                                       'incidence7Days': {'type': 'number'},\n                                                       'lastUpdate': {'type': 'string'}},\n                                        'required': ['cases7Days',\n                                                     'date',\n                                                     'incidence7Days',\n                                                     'lastUpdate'],\n                                        'type': 'object'},\n                    'meta': {'properties': {'contact': {'type': 'string'},\n                                            'info': {'type': 'string'},\n                                            'lastCheckedForUpdate': {'type': 'string'},\n                                            'lastUpdate': {'type': 'string'},\n                                            'source': {'type': 'string'}},\n                             'required': ['contact',\n                                          'info',\n                                          'lastCheckedForUpdate',\n                                          'lastUpdate',\n                                          'source'],\n                             'type': 'object'},\n                    'r': {'properties': {'lastUpdate': {'type': 'string'},\n                                         'rValue4Days': {'properties': {'date': {'type': 'string'},\n                                                                        'value': {'type': 'number'}},\n                                                         'required': ['date',\n                                                                      'value'],\n                                                         'type': 'object'},\n                                         'rValue7Days': {'properties': {'date': {'type': 'string'},\n                                                                        'value': {'type': 'number'}},\n                                                         'required': ['date',\n                                                                      'value'],\n                                                         'type': 'object'},\n                                         'value': {'type': 'number'}},\n                          'required': ['lastUpdate',\n                                       'rValue4Days',\n                                       'rValue7Days',\n                                       'value'],\n                          'type': 'object'},\n                    'recovered': {'type': 'integer'},\n                    'weekIncidence': {'type': 'number'}},\n     'required': ['cases',\n                  'casesPer100k',\n                  'casesPerWeek',\n                  'deaths',\n                  'delta',\n                  'hospitalization',\n                  'meta',\n                  'r',\n                  'recovered',\n                  'weekIncidence'],\n     'type': 'object'}\n\nOn instance:\n    {'cases': 38306781,\n     'casesPer100k': 46021.26930767094,\n     'casesPerWeek': 36381,\n     'deaths': 169802,\n     'deathsPerWeek': 65,\n     'delta': {'cases': 9744,\n               'deaths': 141,\n               'recovered': 16260,\n               'weekIncidence': -0.051659641676},\n     'hospitalization': {'cases7Days': 5948,\n                         'date': '2023-03-21T00:00:00.000Z',\n                         'incidence7Days': 7.15,\n                         'lastUpdate': '2023-03-21T04:05:31.000Z'},\n     'meta': {'contact': 'Marlon Lueckert (m.lueckert@me.com)',\n              'info': 'https://github.com/marlon360/rki-covid-api',\n              'lastCheckedForUpdate': '2023-03-21T14:31:54.024Z',\n              'lastUpdate': '2023-03-21T01:57:21.000Z',\n              'source': 'Robert Koch-Institut'},\n     'r': {'lastUpdate': '2023-03-21T03:55:37.000Z',\n           'rValue4Days': {'date': '2023-03-17T00:00:00.000Z',\n                           'value': 0.89},\n           'rValue7Days': {'date': '2023-03-16T00:00:00.000Z',\n                           'value': 0.92},\n           'value': 0.89},\n     'recovered': 37967266,\n     'weekIncidence': 43.70766101913853}"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe german_history_frozen_incidence stream has the following schema errors:\nAdditional properties are not allowed ('dataSource' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/schema#',\n     'additionalProperties': False,\n     'properties': {'date': {'type': 'string'},\n                    'weekIncidence': {'type': 'number'}},\n     'required': ['date', 'weekIncidence'],\n     'type': 'object'}\n\nOn instance:\n    {'dataSource': 'Unofficial, calculated from daily RKI Dump',\n     'date': '2023-03-21T00:00:00.000Z',\n     'weekIncidence': 43.7076610191}"}}
------------------------------ Captured log call -------------------------------
ERROR    root:test_core.py:662 
The germany stream has the following schema errors:
Additional properties are not allowed ('deathsPerWeek' was unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/schema#',
     'additionalProperties': False,
     'properties': {'cases': {'type': 'integer'},
                    'casesPer100k': {'type': 'number'},
                    'casesPerWeek': {'type': 'integer'},
                    'deaths': {'type': 'integer'},
                    'delta': {'properties': {'cases': {'type': 'integer'},
                                             'deaths': {'type': 'integer'},
                                             'recovered': {'type': 'integer'}},
                              'required': ['cases', 'deaths', 'recovered'],
                              'type': 'object'},
                    'hospitalization': {'properties': {'cases7Days': {'type': 'integer'},
                                                       'date': {'type': 'string'},
                                                       'incidence7Days': {'type': 'number'},
                                                       'lastUpdate': {'type': 'string'}},
                                        'required': ['cases7Days',
                                                     'date',
                                                     'incidence7Days',
                                                     'lastUpdate'],
                                        'type': 'object'},
                    'meta': {'properties': {'contact': {'type': 'string'},
                                            'info': {'type': 'string'},
                                            'lastCheckedForUpdate': {'type': 'string'},
                                            'lastUpdate': {'type': 'string'},
                                            'source': {'type': 'string'}},
                             'required': ['contact',
                                          'info',
                                          'lastCheckedForUpdate',
                                          'lastUpdate',
                                          'source'],
                             'type': 'object'},
                    'r': {'properties': {'lastUpdate': {'type': 'string'},
                                         'rValue4Days': {'properties': {'date': {'type': 'string'},
                                                                        'value': {'type': 'number'}},
                                                         'required': ['date',
                                                                      'value'],
                                                         'type': 'object'},
                                         'rValue7Days': {'properties': {'date': {'type': 'string'},
                                                                        'value': {'type': 'number'}},
                                                         'required': ['date',
                                                                      'value'],
                                                         'type': 'object'},
                                         'value': {'type': 'number'}},
                          'required': ['lastUpdate',
                                       'rValue4Days',
                                       'rValue7Days',
                                       'value'],
                          'type': 'object'},
                    'recovered': {'type': 'integer'},
                    'weekIncidence': {'type': 'number'}},
     'required': ['cases',
                  'casesPer100k',
                  'casesPerWeek',
                  'deaths',
                  'delta',
                  'hospitalization',
                  'meta',
                  'r',
                  'recovered',
                  'weekIncidence'],
     'type': 'object'}

On instance:
    {'cases': 38306781,
     'casesPer100k': 46021.26930767094,
     'casesPerWeek': 36381,
     'deaths': 169802,
     'deathsPerWeek': 65,
     'delta': {'cases': 9744,
               'deaths': 141,
               'recovered': 16260,
               'weekIncidence': -0.051659641676},
     'hospitalization': {'cases7Days': 5948,
                         'date': '2023-03-21T00:00:00.000Z',
                         'incidence7Days': 7.15,
                         'lastUpdate': '2023-03-21T04:05:31.000Z'},
     'meta': {'contact': 'Marlon Lueckert (m.lueckert@me.com)',
              'info': 'https://github.com/marlon360/rki-covid-api',
              'lastCheckedForUpdate': '2023-03-21T14:31:54.024Z',
              'lastUpdate': '2023-03-21T01:57:21.000Z',
              'source': 'Robert Koch-Institut'},
     'r': {'lastUpdate': '2023-03-21T03:55:37.000Z',
           'rValue4Days': {'date': '2023-03-17T00:00:00.000Z',
                           'value': 0.89},
           'rValue7Days': {'date': '2023-03-16T00:00:00.000Z',
                           'value': 0.92},
           'value': 0.89},
     'recovered': 37967266,
     'weekIncidence': 43.70766101913853}
ERROR    root:test_core.py:662 
The german_history_frozen_incidence stream has the following schema errors:
Additional properties are not allowed ('dataSource' was unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/schema#',
     'additionalProperties': False,
     'properties': {'date': {'type': 'string'},
                    'weekIncidence': {'type': 'number'}},
     'required': ['date', 'weekIncidence'],
     'type': 'object'}

On instance:
    {'dataSource': 'Unofficial, calculated from daily RKI Dump',
     'date': '2023-03-21T00:00:00.000Z',
     'weekIncidence': 43.7076610191}
=============================== warnings summary ===============================
connector_acceptance_test/config.py:282: 36 warnings
test_core.py: 1 warning
  /airbyte/connector_acceptance_test/connector_acceptance_test/config.py:282: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
    logging.warn("The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.")

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - Fai...
=========== 1 failed, 1 passed, 34 deselected, 37 warnings in 58.57s ===========
