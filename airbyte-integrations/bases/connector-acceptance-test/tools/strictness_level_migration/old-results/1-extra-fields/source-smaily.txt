../../../../connectors/source-smaily/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-smaily
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
collected 34 items / 33 deselected / 1 skipped

../../test_input/test_core.py F                                          [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffffb04aa970>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='users', json_schema={'type': 'obj...l_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
expect_records_config = None, should_validate_schema = True
should_validate_data_points = False, should_fail_on_extra_columns = True
empty_streams = set(), ignored_fields = {}, expected_records_by_stream = {}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffffafddf6d0>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
        output = docker_runner.call_read(connector_config, configured_catalog)
        records = [message.record for message in filter_output(output, Type.RECORD)]
    
        assert records, "At least one record should be read using provided catalog"
    
        if should_validate_schema:  # TODO Conditional logic
>           self._validate_schema(
                records=records, configured_catalog=configured_catalog, fail_on_extra_columns=should_fail_on_extra_columns
            )

connector_acceptance_test/tests/test_core.py:823: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

records = [AirbyteRecordMessage(namespace=None, stream='users', data={'id': 28088, 'email': 'jointasas@gmail.com', 'first_name':...': '2022-10-28 18:48:49', 'activated_at': '0000-00-00 00:00:00', 'status': 'INACTIVE'}, emitted_at=1679411850397), ...]
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='users', json_schema={'type': 'obj...l_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
fail_on_extra_columns = True

    @staticmethod
    def _validate_schema(records: List[AirbyteRecordMessage], configured_catalog: ConfiguredAirbyteCatalog, fail_on_extra_columns: Boolean):
        """
        Check if data type and structure in records matches the one in json_schema of the stream in catalog
        """
        TestBasicRead._validate_records_structure(records, configured_catalog)
        bar = "-" * 80
        streams_errors = verify_records_schema(records, configured_catalog, fail_on_extra_columns)
        for stream_name, errors in streams_errors.items():
            errors = map(str, errors.values())
            str_errors = f"\n{bar}\n".join(errors)
            logging.error(f"\nThe {stream_name} stream has the following schema errors:\n{str_errors}")
    
        if streams_errors:
>           pytest.fail(f"Please check your json_schema in selected streams {tuple(streams_errors.keys())}.")
E           Failed: Please check your json_schema in selected streams ('automations',).

connector_acceptance_test/tests/test_core.py:665: Failed
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe automations stream has the following schema errors:\nAdditional properties are not allowed ('tags', 'status', 'activated_at', 'created_at' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'additionalProperties': False,\n     'properties': {'id': {'type': 'string'},\n                    'name': {'type': ['string', 'null']},\n                    'sections': {'items': {'properties': {'id': {'type': 'integer'},\n                                                          'subject': {'type': ['string',\n                                                                               'null']},\n                                                          'template': {'properties': {'id': {'type': 'integer'},\n                                                                                      'name': {'type': ['string',\n                                                                                                        'null']},\n                                                                                      'preview_url': {'type': ['string',\n                                                                                                               'null']}},\n                                                                       'type': ['object',\n                                                                                'null']}},\n                                           'type': 'object'},\n                                 'type': ['array', 'null']}},\n     'required': ['id'],\n     'type': 'object'}\n\nOn instance:\n    {'activated_at': '0000-00-00 00:00:00',\n     'created_at': '2022-10-28 18:48:49',\n     'id': '2',\n     'name': 'Untitled',\n     'sections': [],\n     'status': 'INACTIVE',\n     'tags': []}"}}
------------------------------ Captured log call -------------------------------
ERROR    root:test_core.py:662 
The automations stream has the following schema errors:
Additional properties are not allowed ('tags', 'status', 'activated_at', 'created_at' were unexpected)

Failed validating 'additionalProperties' in schema:
    {'additionalProperties': False,
     'properties': {'id': {'type': 'string'},
                    'name': {'type': ['string', 'null']},
                    'sections': {'items': {'properties': {'id': {'type': 'integer'},
                                                          'subject': {'type': ['string',
                                                                               'null']},
                                                          'template': {'properties': {'id': {'type': 'integer'},
                                                                                      'name': {'type': ['string',
                                                                                                        'null']},
                                                                                      'preview_url': {'type': ['string',
                                                                                                               'null']}},
                                                                       'type': ['object',
                                                                                'null']}},
                                           'type': 'object'},
                                 'type': ['array', 'null']}},
     'required': ['id'],
     'type': 'object'}

On instance:
    {'activated_at': '0000-00-00 00:00:00',
     'created_at': '2022-10-28 18:48:49',
     'id': '2',
     'name': 'Untitled',
     'sections': [],
     'status': 'INACTIVE',
     'tags': []}
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - Fai...
SKIPPED [1] connector_acceptance_test/plugin.py:63: Skipping TestIncremental.test_two_sequential_reads: This connector does not implement incremental sync
================= 1 failed, 1 skipped, 33 deselected in 8.37s ==================
