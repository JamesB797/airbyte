../../../../connectors/source-mixpanel/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-mixpanel
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
collected 39 items / 37 deselected / 2 selected

../../test_input/test_core.py F                                          [ 50%]
../../test_input/test_incremental.py .                                   [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffffbb469c10>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='annotations', json_schema={'$sche...ull_refresh'>, cursor_field=['time'], destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
expect_records_config = ExpectedRecordsConfig(bypass_reason=None, path=PosixPath('integration_tests/expected_records.jsonl'), extra_fields=False, exact_order=False, extra_records=True)
should_validate_schema = True, should_validate_data_points = False
should_fail_on_extra_columns = True, empty_streams = set(), ignored_fields = {}
expected_records_by_stream = defaultdict(<class 'list'>, {'funnels': [{'funnel_id': 36152117, 'name': 'test', 'date': '2023-01-05', 'steps': [{'cou...17', 'amount': 0.0, 'count': 3, 'paid_count': 0}, {'date': '2023-01-18', 'amount': 0.0, 'count': 3, 'paid_count': 0}]})
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffffbb462790>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
        output = docker_runner.call_read(connector_config, configured_catalog)
        records = [message.record for message in filter_output(output, Type.RECORD)]
    
        assert records, "At least one record should be read using provided catalog"
    
        if should_validate_schema:  # TODO Conditional logic
>           self._validate_schema(
                records=records, configured_catalog=configured_catalog, fail_on_extra_columns=should_fail_on_extra_columns
            )

connector_acceptance_test/tests/test_core.py:823: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

records = [AirbyteRecordMessage(namespace=None, stream='annotations', data={'date': '2023-01-15T12:00:00+01:00', 'description': ...97, 'project_id': 2529987, 'user': {'id': 3440095, 'first_name': '', 'last_name': ''}}, emitted_at=1679407880506), ...]
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='annotations', json_schema={'$sche...ull_refresh'>, cursor_field=['time'], destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
fail_on_extra_columns = True

    @staticmethod
    def _validate_schema(records: List[AirbyteRecordMessage], configured_catalog: ConfiguredAirbyteCatalog, fail_on_extra_columns: Boolean):
        """
        Check if data type and structure in records matches the one in json_schema of the stream in catalog
        """
        TestBasicRead._validate_records_structure(records, configured_catalog)
        bar = "-" * 80
        streams_errors = verify_records_schema(records, configured_catalog, fail_on_extra_columns)
        for stream_name, errors in streams_errors.items():
            errors = map(str, errors.values())
            str_errors = f"\n{bar}\n".join(errors)
            logging.error(f"\nThe {stream_name} stream has the following schema errors:\n{str_errors}")
    
        if streams_errors:
>           pytest.fail(f"Please check your json_schema in selected streams {tuple(streams_errors.keys())}.")
E           Failed: Please check your json_schema in selected streams ('annotations', 'export').

connector_acceptance_test/tests/test_core.py:665: Failed
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe annotations stream has the following schema errors:\nAdditional properties are not allowed ('user' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'properties': {'date': {'format': 'date-time',\n                             'type': ['null', 'string']},\n                    'description': {'type': ['null', 'string']},\n                    'id': {'type': ['null', 'integer']},\n                    'project_id': {'type': ['null', 'integer']}},\n     'type': 'object'}\n\nOn instance:\n    {'date': '2023-01-13T12:00:00+01:00',\n     'description': 'test121233',\n     'id': 1138197,\n     'project_id': 2529987,\n     'user': {'first_name': '', 'id': 3440095, 'last_name': ''}}"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe export stream has the following schema errors:\nAdditional properties are not allowed ('Referred by', 'import', 'URL', 'insert_id', 'mp_api_timestamp_ms', 'mp_api_endpoint', 'mp_processing_time_ms' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'properties': {'dataset': {'type': ['null', 'string']},\n                    'distinct_id': {'type': ['null', 'string']},\n                    'duration_s': {'type': ['null', 'string']},\n                    'event': {'type': ['null', 'string']},\n                    'event_count': {'type': ['null', 'string']},\n                    'labels': {'items': {'type': ['null', 'string']},\n                               'type': ['null', 'array']},\n                    'origin_end': {'type': ['null', 'string']},\n                    'origin_start': {'type': ['null', 'string']},\n                    'sampling_factor': {'type': ['null', 'integer']},\n                    'time': {'format': 'date-time',\n                             'type': ['null', 'string']}},\n     'type': 'object'}\n\nOn instance:\n    {'Referred by': 'Friend',\n     'URL': 'mixpanel.com/signup',\n     'distinct_id': '91304156-cafc-4673-a237-623d1129c801',\n     'event': 'Signup',\n     'import': 'True',\n     'insert_id': '29fc2962-6d9c-455d-95ad-95b84f09b9e4',\n     'mp_api_endpoint': 'api.mixpanel.com',\n     'mp_api_timestamp_ms': '1674001620825',\n     'mp_processing_time_ms': '1674001621450',\n     'time': '2023-01-13T12:05:17Z'}"}}
------------------------------ Captured log call -------------------------------
ERROR    root:test_core.py:662 
The annotations stream has the following schema errors:
Additional properties are not allowed ('user' was unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/draft-07/schema#',
     'additionalProperties': False,
     'properties': {'date': {'format': 'date-time',
                             'type': ['null', 'string']},
                    'description': {'type': ['null', 'string']},
                    'id': {'type': ['null', 'integer']},
                    'project_id': {'type': ['null', 'integer']}},
     'type': 'object'}

On instance:
    {'date': '2023-01-13T12:00:00+01:00',
     'description': 'test121233',
     'id': 1138197,
     'project_id': 2529987,
     'user': {'first_name': '', 'id': 3440095, 'last_name': ''}}
ERROR    root:test_core.py:662 
The export stream has the following schema errors:
Additional properties are not allowed ('Referred by', 'import', 'URL', 'insert_id', 'mp_api_timestamp_ms', 'mp_api_endpoint', 'mp_processing_time_ms' were unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/draft-07/schema#',
     'additionalProperties': False,
     'properties': {'dataset': {'type': ['null', 'string']},
                    'distinct_id': {'type': ['null', 'string']},
                    'duration_s': {'type': ['null', 'string']},
                    'event': {'type': ['null', 'string']},
                    'event_count': {'type': ['null', 'string']},
                    'labels': {'items': {'type': ['null', 'string']},
                               'type': ['null', 'array']},
                    'origin_end': {'type': ['null', 'string']},
                    'origin_start': {'type': ['null', 'string']},
                    'sampling_factor': {'type': ['null', 'integer']},
                    'time': {'format': 'date-time',
                             'type': ['null', 'string']}},
     'type': 'object'}

On instance:
    {'Referred by': 'Friend',
     'URL': 'mixpanel.com/signup',
     'distinct_id': '91304156-cafc-4673-a237-623d1129c801',
     'event': 'Signup',
     'import': 'True',
     'insert_id': '29fc2962-6d9c-455d-95ad-95b84f09b9e4',
     'mp_api_endpoint': 'api.mixpanel.com',
     'mp_api_timestamp_ms': '1674001620825',
     'mp_processing_time_ms': '1674001621450',
     'time': '2023-01-13T12:05:17Z'}
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - Fai...
=========== 1 failed, 1 passed, 37 deselected in 5418.29s (1:30:18) ============
