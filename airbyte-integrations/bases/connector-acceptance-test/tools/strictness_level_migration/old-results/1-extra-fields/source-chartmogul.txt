../../../../connectors/source-chartmogul/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-chartmogul
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
collected 34 items / 33 deselected / 1 skipped

../../test_input/test_core.py F                                          [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffff98e7c580>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='customers', json_schema={'$schema...l_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
expect_records_config = ExpectedRecordsConfig(bypass_reason=None, path=PosixPath('integration_tests/expected_records.jsonl'), extra_fields=False, exact_order=False, extra_records=True)
should_validate_schema = True, should_validate_data_points = False
should_fail_on_extra_columns = True, empty_streams = set(), ignored_fields = {}
expected_records_by_stream = defaultdict(<class 'list'>, {'customers': [{'id': 72038151, 'uuid': 'cus_e6e6b1e6-72d4-11ec-ac99-47c8cf90d52c', 'exter...71-72b1-440e-9816-d61435fd2e45'}], 'customer_count': [{'date': '2022-01-01', 'customers': 1, 'percentage-change': 0}]})
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff9852be50>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
        output = docker_runner.call_read(connector_config, configured_catalog)
        records = [message.record for message in filter_output(output, Type.RECORD)]
    
        assert records, "At least one record should be read using provided catalog"
    
        if should_validate_schema:  # TODO Conditional logic
>           self._validate_schema(
                records=records, configured_catalog=configured_catalog, fail_on_extra_columns=should_fail_on_extra_columns
            )

connector_acceptance_test/tests/test_core.py:823: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

records = [AirbyteRecordMessage(namespace=None, stream='customers', data={'id': 72038151, 'uuid': 'cus_e6e6b1e6-72d4-11ec-ac99-4...customer_count', data={'date': '2015-11-04', 'customers': 1, 'percentage-change': 0.0}, emitted_at=1679404649827), ...]
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='customers', json_schema={'$schema...l_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
fail_on_extra_columns = True

    @staticmethod
    def _validate_schema(records: List[AirbyteRecordMessage], configured_catalog: ConfiguredAirbyteCatalog, fail_on_extra_columns: Boolean):
        """
        Check if data type and structure in records matches the one in json_schema of the stream in catalog
        """
        TestBasicRead._validate_records_structure(records, configured_catalog)
        bar = "-" * 80
        streams_errors = verify_records_schema(records, configured_catalog, fail_on_extra_columns)
        for stream_name, errors in streams_errors.items():
            errors = map(str, errors.values())
            str_errors = f"\n{bar}\n".join(errors)
            logging.error(f"\nThe {stream_name} stream has the following schema errors:\n{str_errors}")
    
        if streams_errors:
>           pytest.fail(f"Please check your json_schema in selected streams {tuple(streams_errors.keys())}.")
E           Failed: Please check your json_schema in selected streams ('customers', 'customer_count').

connector_acceptance_test/tests/test_core.py:665: Failed
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe customers stream has the following schema errors:\nAdditional properties are not allowed ('customer-since' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'properties': {'address': {'properties': {'address_zip': {'type': ['null',\n                                                                        'string']},\n                                               'city': {'type': ['null',\n                                                                 'string']},\n                                               'country': {'type': ['null',\n                                                                    'string']},\n                                               'state': {'type': ['null',\n                                                                  'string']}},\n                                'type': ['null', 'object']},\n                    'arr': {'type': ['null', 'integer']},\n                    'attributes': {'properties': {'clearbit': {'properties': {},\n                                                               'type': ['null',\n                                                                        'object']},\n                                                  'custom': {'properties': {},\n                                                             'type': ['null',\n                                                                      'object']},\n                                                  'stripe': {'properties': {'brandID': {'type': ['null',\n                                                                                                 'string']},\n                                                                            'brandName': {'type': ['null',\n                                                                                                   'string']},\n                                                                            'createdAt': {'type': ['null',\n                                                                                                   'string']},\n                                                                            'platformName': {'type': ['null',\n                                                                                                      'string']}},\n                                                             'type': ['null',\n                                                                      'object']},\n                                                  'tags': {'type': ['null',\n                                                                    'array']}},\n                                   'type': ['null', 'object']},\n                    'billing-system-type': {'type': ['null', 'string']},\n                    'billing-system-url': {'type': ['null', 'string']},\n                    'chartmogul-url': {'type': ['null', 'string']},\n                    'city': {'type': ['null', 'string']},\n                    'company': {'type': ['null', 'string']},\n                    'country': {'type': ['null', 'string']},\n                    'currency': {'type': ['null', 'string']},\n                    'currency-sign': {'type': ['null', 'string']},\n                    'customer_since': {'type': ['null', 'string']},\n                    'data_source_uuid': {'type': ['null', 'string']},\n                    'data_source_uuids': {'type': ['null', 'array']},\n                    'email': {'type': ['null', 'string']},\n                    'external_id': {'type': ['null', 'string']},\n                    'external_ids': {'type': ['null', 'array']},\n                    'free_trial_started_at': {'type': ['null', 'string']},\n                    'id': {'type': ['integer']},\n                    'lead_created_at': {'type': ['null', 'string']},\n                    'mrr': {'type': ['null', 'integer']},\n                    'name': {'type': ['null', 'string']},\n                    'state': {'type': ['null', 'string']},\n                    'status': {'type': ['null', 'string']},\n                    'uuid': {'type': ['string']},\n                    'zip': {'type': ['null', 'string']}},\n     'type': 'object'}\n\nOn instance:\n    {'address': {'address_zip': '94121',\n                 'city': 'San Francisco',\n                 'country': 'United States',\n                 'state': 'California'},\n     'arr': 49200,\n     'attributes': {'clearbit': {}, 'custom': {}, 'stripe': {}, 'tags': []},\n     'billing-system-type': 'Import API',\n     'billing-system-url': None,\n     'chartmogul-url': 'https://app.chartmogul.com/#/customers/72038151-Airbyte',\n     'city': 'San Francisco',\n     'company': 'Airbyte',\n     'country': 'US',\n     'currency': 'USD',\n     'currency-sign': '$',\n     'customer-since': '2015-11-01T00:00:00+00:00',\n     'data_source_uuid': 'ds_2dbe3b80-72d4-11ec-bdef-0f585abe5bf3',\n     'data_source_uuids': ['ds_2dbe3b80-72d4-11ec-bdef-0f585abe5bf3'],\n     'email': 'integration-test@airbyte.io',\n     'external_id': 'cus_0001',\n     'external_ids': ['cus_0001'],\n     'free_trial_started_at': '2022-01-11T00:00:00.000Z',\n     'id': 72038151,\n     'lead_created_at': '2022-01-11T00:00:00.000Z',\n     'mrr': 4100,\n     'name': 'Adam Smith',\n     'state': 'CA',\n     'status': 'Past Due',\n     'uuid': 'cus_e6e6b1e6-72d4-11ec-ac99-47c8cf90d52c',\n     'zip': '94121'}"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe customer_count stream has the following schema errors:\nAdditional properties are not allowed ('percentage-change' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'properties': {'customers': {'type': ['integer']},\n                    'date': {'type': ['string']}},\n     'type': 'object'}\n\nOn instance:\n    {'customers': 1, 'date': '2023-03-21', 'percentage-change': 0.0}"}}
------------------------------ Captured log call -------------------------------
ERROR    root:test_core.py:662 
The customers stream has the following schema errors:
Additional properties are not allowed ('customer-since' was unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/draft-07/schema#',
     'additionalProperties': False,
     'properties': {'address': {'properties': {'address_zip': {'type': ['null',
                                                                        'string']},
                                               'city': {'type': ['null',
                                                                 'string']},
                                               'country': {'type': ['null',
                                                                    'string']},
                                               'state': {'type': ['null',
                                                                  'string']}},
                                'type': ['null', 'object']},
                    'arr': {'type': ['null', 'integer']},
                    'attributes': {'properties': {'clearbit': {'properties': {},
                                                               'type': ['null',
                                                                        'object']},
                                                  'custom': {'properties': {},
                                                             'type': ['null',
                                                                      'object']},
                                                  'stripe': {'properties': {'brandID': {'type': ['null',
                                                                                                 'string']},
                                                                            'brandName': {'type': ['null',
                                                                                                   'string']},
                                                                            'createdAt': {'type': ['null',
                                                                                                   'string']},
                                                                            'platformName': {'type': ['null',
                                                                                                      'string']}},
                                                             'type': ['null',
                                                                      'object']},
                                                  'tags': {'type': ['null',
                                                                    'array']}},
                                   'type': ['null', 'object']},
                    'billing-system-type': {'type': ['null', 'string']},
                    'billing-system-url': {'type': ['null', 'string']},
                    'chartmogul-url': {'type': ['null', 'string']},
                    'city': {'type': ['null', 'string']},
                    'company': {'type': ['null', 'string']},
                    'country': {'type': ['null', 'string']},
                    'currency': {'type': ['null', 'string']},
                    'currency-sign': {'type': ['null', 'string']},
                    'customer_since': {'type': ['null', 'string']},
                    'data_source_uuid': {'type': ['null', 'string']},
                    'data_source_uuids': {'type': ['null', 'array']},
                    'email': {'type': ['null', 'string']},
                    'external_id': {'type': ['null', 'string']},
                    'external_ids': {'type': ['null', 'array']},
                    'free_trial_started_at': {'type': ['null', 'string']},
                    'id': {'type': ['integer']},
                    'lead_created_at': {'type': ['null', 'string']},
                    'mrr': {'type': ['null', 'integer']},
                    'name': {'type': ['null', 'string']},
                    'state': {'type': ['null', 'string']},
                    'status': {'type': ['null', 'string']},
                    'uuid': {'type': ['string']},
                    'zip': {'type': ['null', 'string']}},
     'type': 'object'}

On instance:
    {'address': {'address_zip': '94121',
                 'city': 'San Francisco',
                 'country': 'United States',
                 'state': 'California'},
     'arr': 49200,
     'attributes': {'clearbit': {}, 'custom': {}, 'stripe': {}, 'tags': []},
     'billing-system-type': 'Import API',
     'billing-system-url': None,
     'chartmogul-url': 'https://app.chartmogul.com/#/customers/72038151-Airbyte',
     'city': 'San Francisco',
     'company': 'Airbyte',
     'country': 'US',
     'currency': 'USD',
     'currency-sign': '$',
     'customer-since': '2015-11-01T00:00:00+00:00',
     'data_source_uuid': 'ds_2dbe3b80-72d4-11ec-bdef-0f585abe5bf3',
     'data_source_uuids': ['ds_2dbe3b80-72d4-11ec-bdef-0f585abe5bf3'],
     'email': 'integration-test@airbyte.io',
     'external_id': 'cus_0001',
     'external_ids': ['cus_0001'],
     'free_trial_started_at': '2022-01-11T00:00:00.000Z',
     'id': 72038151,
     'lead_created_at': '2022-01-11T00:00:00.000Z',
     'mrr': 4100,
     'name': 'Adam Smith',
     'state': 'CA',
     'status': 'Past Due',
     'uuid': 'cus_e6e6b1e6-72d4-11ec-ac99-47c8cf90d52c',
     'zip': '94121'}
ERROR    root:test_core.py:662 
The customer_count stream has the following schema errors:
Additional properties are not allowed ('percentage-change' was unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/draft-07/schema#',
     'additionalProperties': False,
     'properties': {'customers': {'type': ['integer']},
                    'date': {'type': ['string']}},
     'type': 'object'}

On instance:
    {'customers': 1, 'date': '2023-03-21', 'percentage-change': 0.0}
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - Fai...
SKIPPED [1] connector_acceptance_test/plugin.py:63: Skipping TestIncremental.test_two_sequential_reads: not found in the config.
================= 1 failed, 1 skipped, 33 deselected in 8.30s ==================
