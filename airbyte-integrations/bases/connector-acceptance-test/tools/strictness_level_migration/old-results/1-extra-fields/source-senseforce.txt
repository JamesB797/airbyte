../../../../connectors/source-senseforce/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-senseforce
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
collected 37 items / 35 deselected / 2 selected

../../test_input/test_core.py F                                          [ 50%]
../../test_input/test_incremental.py .                                   [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffff93d9e820>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='dataset', json_schema={'$schema':...l'>, cursor_field=['airbyte_cursor'], destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
expect_records_config = None, should_validate_schema = True
should_validate_data_points = False, should_fail_on_extra_columns = True
empty_streams = set(), ignored_fields = {}, expected_records_by_stream = {}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff93db4910>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
        output = docker_runner.call_read(connector_config, configured_catalog)
        records = [message.record for message in filter_output(output, Type.RECORD)]
    
        assert records, "At least one record should be read using provided catalog"
    
        if should_validate_schema:  # TODO Conditional logic
>           self._validate_schema(
                records=records, configured_catalog=configured_catalog, fail_on_extra_columns=should_fail_on_extra_columns
            )

connector_acceptance_test/tests/test_core.py:823: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

records = [AirbyteRecordMessage(namespace=None, stream='dataset', data={'timestamp': 1595430911007, 'thing': 'test', 'id': '94e9...ue': 0.0, 'deal id': 1915661844, 'close date': None, 'airbyte_cursor': 1595430911.007}, emitted_at=1679409721825), ...]
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='dataset', json_schema={'$schema':...l'>, cursor_field=['airbyte_cursor'], destination_sync_mode=<DestinationSyncMode.append: 'append'>, primary_key=None)])
fail_on_extra_columns = True

    @staticmethod
    def _validate_schema(records: List[AirbyteRecordMessage], configured_catalog: ConfiguredAirbyteCatalog, fail_on_extra_columns: Boolean):
        """
        Check if data type and structure in records matches the one in json_schema of the stream in catalog
        """
        TestBasicRead._validate_records_structure(records, configured_catalog)
        bar = "-" * 80
        streams_errors = verify_records_schema(records, configured_catalog, fail_on_extra_columns)
        for stream_name, errors in streams_errors.items():
            errors = map(str, errors.values())
            str_errors = f"\n{bar}\n".join(errors)
            logging.error(f"\nThe {stream_name} stream has the following schema errors:\n{str_errors}")
    
        if streams_errors:
>           pytest.fail(f"Please check your json_schema in selected streams {tuple(streams_errors.keys())}.")
E           Failed: Please check your json_schema in selected streams ('dataset',).

connector_acceptance_test/tests/test_core.py:665: Failed
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe dataset stream has the following schema errors:\nAdditional properties are not allowed ('close date', 'stage name', 'total value', 'deal id', 'professional service revenue', 'pipeline name', 'stage id' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'additionalProperties': False,\n     'properties': {'airbyte_cursor': {'type': 'number'},\n                    'id': {'type': ['null', 'string']},\n                    'thing': {'type': 'string'},\n                    'timestamp': {'type': 'integer'}},\n     'type': 'object'}\n\nOn instance:\n    {'airbyte_cursor': 1595570341.224,\n     'close date': 1593512215056,\n     'deal id': 2351974791,\n     'id': 'ff1524c4-9d4b-4a89-bac3-478dfc7ac706',\n     'pipeline name': 'Sales Pipeline',\n     'professional service revenue': None,\n     'stage id': 'appointmentscheduled',\n     'stage name': 'Qualification',\n     'thing': 'test',\n     'timestamp': 1595570341224,\n     'total value': 20000.0}"}}
------------------------------ Captured log call -------------------------------
ERROR    root:test_core.py:662 
The dataset stream has the following schema errors:
Additional properties are not allowed ('close date', 'stage name', 'total value', 'deal id', 'professional service revenue', 'pipeline name', 'stage id' were unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/draft-07/schema#',
     'additionalProperties': False,
     'properties': {'airbyte_cursor': {'type': 'number'},
                    'id': {'type': ['null', 'string']},
                    'thing': {'type': 'string'},
                    'timestamp': {'type': 'integer'}},
     'type': 'object'}

On instance:
    {'airbyte_cursor': 1595570341.224,
     'close date': 1593512215056,
     'deal id': 2351974791,
     'id': 'ff1524c4-9d4b-4a89-bac3-478dfc7ac706',
     'pipeline name': 'Sales Pipeline',
     'professional service revenue': None,
     'stage id': 'appointmentscheduled',
     'stage name': 'Qualification',
     'thing': 'test',
     'timestamp': 1595570341224,
     'total value': 20000.0}
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - Fai...
================= 1 failed, 1 passed, 35 deselected in 21.66s ==================
