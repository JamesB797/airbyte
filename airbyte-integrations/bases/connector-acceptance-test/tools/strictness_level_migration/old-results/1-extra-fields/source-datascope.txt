../../../../connectors/source-datascope/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-datascope
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
collected 37 items / 35 deselected / 2 selected

../../test_input/test_core.py F                                          [ 50%]
../../test_input/test_incremental.py .                                   [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs0] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffff8df1d790>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='locations', json_schema={'$schema...l_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
expect_records_config = None, should_validate_schema = True
should_validate_data_points = False, should_fail_on_extra_columns = True
empty_streams = {EmptyStreamConfiguration(name='lists', bypass_reason=None), EmptyStreamConfiguration(name='notifications', bypass_reason=None)}
ignored_fields = {}, expected_records_by_stream = {}
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffff8dfe1970>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs0].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
        output = docker_runner.call_read(connector_config, configured_catalog)
        records = [message.record for message in filter_output(output, Type.RECORD)]
    
        assert records, "At least one record should be read using provided catalog"
    
        if should_validate_schema:  # TODO Conditional logic
>           self._validate_schema(
                records=records, configured_catalog=configured_catalog, fail_on_extra_columns=should_fail_on_extra_columns
            )

connector_acceptance_test/tests/test_core.py:823: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

records = [AirbyteRecordMessage(namespace=None, stream='locations', data={'id': 1398602, 'name': 'Company 1', 'description': Non...the form': 'This was a great test!', 'Text 2': 'Indeed, great testing going on here!'}, emitted_at=1679404733537), ...]
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='locations', json_schema={'$schema...l_refresh'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.overwrite: 'overwrite'>, primary_key=None)])
fail_on_extra_columns = True

    @staticmethod
    def _validate_schema(records: List[AirbyteRecordMessage], configured_catalog: ConfiguredAirbyteCatalog, fail_on_extra_columns: Boolean):
        """
        Check if data type and structure in records matches the one in json_schema of the stream in catalog
        """
        TestBasicRead._validate_records_structure(records, configured_catalog)
        bar = "-" * 80
        streams_errors = verify_records_schema(records, configured_catalog, fail_on_extra_columns)
        for stream_name, errors in streams_errors.items():
            errors = map(str, errors.values())
            str_errors = f"\n{bar}\n".join(errors)
            logging.error(f"\nThe {stream_name} stream has the following schema errors:\n{str_errors}")
    
        if streams_errors:
>           pytest.fail(f"Please check your json_schema in selected streams {tuple(streams_errors.keys())}.")
E           Failed: Please check your json_schema in selected streams ('locations', 'answers').

connector_acceptance_test/tests/test_core.py:665: Failed
---------------------------- Captured stdout setup -----------------------------
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
------------------------------ Captured log setup ------------------------------
WARNING  root:config.py:282 The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe locations stream has the following schema errors:\nAdditional properties are not allowed ('email' was unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'properties': {'address': {'type': ['string', 'null']},\n                    'city': {'type': ['string', 'null']},\n                    'code': {'type': ['string', 'null']},\n                    'company_code': {'type': ['string', 'null']},\n                    'company_name': {'type': ['string', 'null']},\n                    'country': {'type': ['string', 'null']},\n                    'description': {'type': ['string', 'null']},\n                    'id': {'type': 'integer'},\n                    'latitude': {'type': ['number', 'null']},\n                    'longitude': {'type': ['number', 'null']},\n                    'name': {'type': 'string'},\n                    'phone': {'type': ['string', 'null']},\n                    'region': {'type': ['string', 'null']}},\n     'type': 'object'}\n\nOn instance:\n    {'address': None,\n     'city': None,\n     'code': 'loc_example4',\n     'company_code': None,\n     'company_name': None,\n     'country': None,\n     'description': None,\n     'email': None,\n     'id': 1398606,\n     'latitude': None,\n     'longitude': None,\n     'name': 'Company 5',\n     'phone': None,\n     'region': None}"}}
{"type": "LOG", "log": {"level": "ERROR", "message": "\nThe answers stream has the following schema errors:\nAdditional properties are not allowed ('Testing the form', 'created', 'deleted', 'assign_location_name', 'created_date', 'latlong', 'assign_internal_id', 'assign_location_code', 'assign_location_description', 'assign_id', 'Text 2' were unexpected)\n\nFailed validating 'additionalProperties' in schema:\n    {'$schema': 'http://json-schema.org/draft-04/schema#',\n     'additionalProperties': False,\n     'properties': {'[question_name1]': {'type': 'string'},\n                    '[question_name2]': {'type': 'string'},\n                    '[question_name3]': {'type': 'string'},\n                    'code': {'type': 'string'},\n                    'created_at': {'type': 'string'},\n                    'form_answer_id': {'type': 'integer'},\n                    'form_id': {'type': 'integer'},\n                    'form_name': {'type': 'string'},\n                    'form_state': {'type': ['string', 'null']},\n                    'latitude': {'type': ['number', 'null']},\n                    'longitude': {'type': ['number', 'null']},\n                    'user_identifier': {'type': 'string'},\n                    'user_name': {'type': 'string'}},\n     'type': 'object'}\n\nOn instance:\n    {'Testing the form': 'A',\n     'Text 2': 'B',\n     'assign_id': '3',\n     'assign_internal_id': 621290,\n     'assign_location_code': 'loc_example0',\n     'assign_location_description': None,\n     'assign_location_name': 'Company 1',\n     'code': '3',\n     'created': '20221030220256',\n     'created_at': '30/10/2022 22:02',\n     'created_date': '20221030',\n     'deleted': False,\n     'form_answer_id': 11089281,\n     'form_id': 496183,\n     'form_name': 'MyTESTFORM',\n     'form_state': None,\n     'latitude': None,\n     'latlong': ', ',\n     'longitude': None,\n     'user_identifier': 'johan.hammarstedt@gmail.com',\n     'user_name': 'Johan Hammarstedt'}"}}
------------------------------ Captured log call -------------------------------
ERROR    root:test_core.py:662 
The locations stream has the following schema errors:
Additional properties are not allowed ('email' was unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/draft-04/schema#',
     'additionalProperties': False,
     'properties': {'address': {'type': ['string', 'null']},
                    'city': {'type': ['string', 'null']},
                    'code': {'type': ['string', 'null']},
                    'company_code': {'type': ['string', 'null']},
                    'company_name': {'type': ['string', 'null']},
                    'country': {'type': ['string', 'null']},
                    'description': {'type': ['string', 'null']},
                    'id': {'type': 'integer'},
                    'latitude': {'type': ['number', 'null']},
                    'longitude': {'type': ['number', 'null']},
                    'name': {'type': 'string'},
                    'phone': {'type': ['string', 'null']},
                    'region': {'type': ['string', 'null']}},
     'type': 'object'}

On instance:
    {'address': None,
     'city': None,
     'code': 'loc_example4',
     'company_code': None,
     'company_name': None,
     'country': None,
     'description': None,
     'email': None,
     'id': 1398606,
     'latitude': None,
     'longitude': None,
     'name': 'Company 5',
     'phone': None,
     'region': None}
ERROR    root:test_core.py:662 
The answers stream has the following schema errors:
Additional properties are not allowed ('Testing the form', 'created', 'deleted', 'assign_location_name', 'created_date', 'latlong', 'assign_internal_id', 'assign_location_code', 'assign_location_description', 'assign_id', 'Text 2' were unexpected)

Failed validating 'additionalProperties' in schema:
    {'$schema': 'http://json-schema.org/draft-04/schema#',
     'additionalProperties': False,
     'properties': {'[question_name1]': {'type': 'string'},
                    '[question_name2]': {'type': 'string'},
                    '[question_name3]': {'type': 'string'},
                    'code': {'type': 'string'},
                    'created_at': {'type': 'string'},
                    'form_answer_id': {'type': 'integer'},
                    'form_id': {'type': 'integer'},
                    'form_name': {'type': 'string'},
                    'form_state': {'type': ['string', 'null']},
                    'latitude': {'type': ['number', 'null']},
                    'longitude': {'type': ['number', 'null']},
                    'user_identifier': {'type': 'string'},
                    'user_name': {'type': 'string'}},
     'type': 'object'}

On instance:
    {'Testing the form': 'A',
     'Text 2': 'B',
     'assign_id': '3',
     'assign_internal_id': 621290,
     'assign_location_code': 'loc_example0',
     'assign_location_description': None,
     'assign_location_name': 'Company 1',
     'code': '3',
     'created': '20221030220256',
     'created_at': '30/10/2022 22:02',
     'created_date': '20221030',
     'deleted': False,
     'form_answer_id': 11089281,
     'form_id': 496183,
     'form_name': 'MyTESTFORM',
     'form_state': None,
     'latitude': None,
     'latlong': ', ',
     'longitude': None,
     'user_identifier': 'johan.hammarstedt@gmail.com',
     'user_name': 'Johan Hammarstedt'}
=============================== warnings summary ===============================
connector_acceptance_test/config.py:282: 36 warnings
test_core.py: 1 warning
  /airbyte/connector_acceptance_test/connector_acceptance_test/config.py:282: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
    logging.warn("The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.")

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs0] - Fai...
===== 1 failed, 1 passed, 35 deselected, 37 warnings in 581.96s (0:09:41) ======
