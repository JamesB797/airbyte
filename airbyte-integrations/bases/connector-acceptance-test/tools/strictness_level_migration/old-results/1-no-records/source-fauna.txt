../../../../connectors/source-fauna/acceptance-test-config.yml
/Users/ella/airbytehq/airbyte/airbyte-integrations/connectors/source-fauna
============================= test session starts ==============================
platform linux -- Python 3.9.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0
rootdir: /test_input
plugins: timeout-1.4.2, hypothesis-6.54.6, requests-mock-1.9.3, cov-3.0.0, sugar-0.9.6, mock-3.6.1
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
{"type": "LOG", "log": {"level": "WARN", "message": "The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format."}}
collected 52 items / 48 deselected / 4 selected

../../test_input/test_core.py .F                                         [ 50%]
../../test_input/test_incremental.py ..                                  [100%]


=================================== FAILURES ===================================
_______________________ TestBasicRead.test_read[inputs1] _______________________

self = <connector_acceptance_test.tests.test_core.TestBasicRead object at 0xffffbb857a30>
connector_config = SecretDict(******)
configured_catalog = ConfiguredAirbyteCatalog(streams=[ConfiguredAirbyteStream(stream=AirbyteStream(name='deletions-data', json_schema={'$s...tal'>, cursor_field=None, destination_sync_mode=<DestinationSyncMode.append_dedup: 'append_dedup'>, primary_key=None)])
expect_records_config = ExpectedRecordsConfig(bypass_reason=None, path=PosixPath('integration_tests/expected_deletions_records.txt'), extra_fields=False, exact_order=True, extra_records=False)
should_validate_schema = True, should_validate_data_points = False
should_fail_on_extra_columns = True, empty_streams = set(), ignored_fields = {}
expected_records_by_stream = defaultdict(<class 'list'>, {'deletions-data': [{'ref': '338836293305763911', 'ts': 1659398359360000, 'deleted_at': '2...None}, {'ref': '338836293305764935', 'ts': 1659398320430000, 'data': {'a': 8, 'nested': {'value': 30}}, 'ttl': None}]})
docker_runner = <connector_acceptance_test.utils.connector_runner.ConnectorRunner object at 0xffffbb8575b0>
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs1].txt (DEBUG)>

    def test_read(
        self,
        connector_config,
        configured_catalog,
        expect_records_config: ExpectedRecordsConfig,
        should_validate_schema: Boolean,
        should_validate_data_points: Boolean,
        should_fail_on_extra_columns: Boolean,
        empty_streams: Set[EmptyStreamConfiguration],
        ignored_fields: Optional[Mapping[str, List[IgnoredFieldsConfiguration]]],
        expected_records_by_stream: MutableMapping[str, List[MutableMapping]],
        docker_runner: ConnectorRunner,
        detailed_logger,
    ):
        output = docker_runner.call_read(connector_config, configured_catalog)
        records = [message.record for message in filter_output(output, Type.RECORD)]
    
        assert records, "At least one record should be read using provided catalog"
    
        if should_validate_schema:  # TODO Conditional logic
            self._validate_schema(
                records=records, configured_catalog=configured_catalog, fail_on_extra_columns=should_fail_on_extra_columns
            )
    
        self._validate_empty_streams(records=records, configured_catalog=configured_catalog, allowed_empty_streams=empty_streams)
        for pks, record in primary_keys_for_records(streams=configured_catalog.streams, records=records):
            for pk_path, pk_value in pks.items():
                assert (
                    pk_value is not None
                ), f"Primary key subkeys {repr(pk_path)} have null values or not present in {record.stream} stream records."
    
        # TODO: remove this condition after https://github.com/airbytehq/airbyte/issues/8312 is done
        if should_validate_data_points:
            self._validate_field_appears_at_least_once(records=records, configured_catalog=configured_catalog)
    
        if expected_records_by_stream:
>           self._validate_expected_records(
                records=records,
                expected_records_by_stream=expected_records_by_stream,
                flags=expect_records_config,
                ignored_fields=ignored_fields,
                detailed_logger=detailed_logger,
            )

connector_acceptance_test/tests/test_core.py:839: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
connector_acceptance_test/tests/test_core.py:743: in _validate_expected_records
    self.compare_records(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

stream_name = 'deletions-data'
actual = [{'data': {'a': 6, 'nested': {'value': 20}}, 'ref': '338836293305762887', 'ts': 1659398320430000, 'ttl': None}, {'data': {'a': 8, 'nested': {'value': 30}}, 'ref': '338836293305764935', 'ts': 1659398320430000, 'ttl': None}]
expected = [{'deleted_at': '2022-08-01T23:59:19.360000', 'ref': '338836293305763911', 'ts': 1659398359360000}, {'deleted_at': '20...: None}, {'data': {'a': 8, 'nested': {'value': 30}}, 'ref': '338836293305764935', 'ts': 1659398320430000, 'ttl': None}]
extra_fields = False, exact_order = True, extra_records = False
ignored_fields = []
detailed_logger = <Logger detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs1].txt (DEBUG)>

    @staticmethod
    def compare_records(
        stream_name: str,
        actual: List[Mapping[str, Any]],
        expected: List[Mapping[str, Any]],
        extra_fields: bool,
        exact_order: bool,
        extra_records: bool,
        ignored_fields: List[str],
        detailed_logger: Logger,
    ):
        """Compare records using combination of restrictions"""
        if exact_order:
            for r1, r2 in zip(expected, actual):
                if r1 is None:
                    assert extra_records, f"Stream {stream_name}: There are more records than expected, but extra_records is off"
                    break
                if extra_fields:
                    r2 = TestBasicRead.remove_extra_fields(r2, r1)
                if ignored_fields:
                    delete_fields(r1, ignored_fields)
                    delete_fields(r2, ignored_fields)
>               assert r1 == r2, f"Stream {stream_name}: Mismatch of record order or values"
E               AssertionError: Stream deletions-data: Mismatch of record order or values
E               assert equals failed
E                 {                           {                          
E                  - 'deleted_at': '2022-08-01   + 'data': {                 
E                  -T23:59:19.360000',                                     
E                                              +  'a': 6,                  
E                                              +  'nested': {              
E                                              +   'value': 20,            
E                                              +  },                       ...
E                 
E                 ...Full output truncated (7 lines hidden), use '-vv' to show

connector_acceptance_test/tests/test_core.py:910: AssertionError
----------------------------- Captured stdout call -----------------------------
{"type": "LOG", "log": {"level": "INFO", "message": "Actual records for stream deletions-data:"}}
{"type": "LOG", "log": {"level": "INFO", "message": "[\n {\n  \"ref\": \"338836293305762887\",\n  \"ts\": 1659398320430000,\n  \"data\": {\n   \"a\": 6,\n   \"nested\": {\n    \"value\": 20\n   }\n  },\n  \"ttl\": null\n },\n {\n  \"ref\": \"338836293305764935\",\n  \"ts\": 1659398320430000,\n  \"data\": {\n   \"a\": 8,\n   \"nested\": {\n    \"value\": 30\n   }\n  },\n  \"ttl\": null\n }\n]"}}
{"type": "LOG", "log": {"level": "INFO", "message": "Expected records for stream deletions-data:"}}
{"type": "LOG", "log": {"level": "INFO", "message": "[\n {\n  \"ref\": \"338836293305763911\",\n  \"ts\": 1659398359360000,\n  \"deleted_at\": \"2022-08-01T23:59:19.360000\"\n },\n {\n  \"ref\": \"338836293305761863\",\n  \"ts\": 1659398366330000,\n  \"deleted_at\": \"2022-08-01T23:59:26.330000\"\n },\n {\n  \"ref\": \"338836293305765959\",\n  \"ts\": 1659398371330000,\n  \"deleted_at\": \"2022-08-01T23:59:31.330000\"\n },\n {\n  \"ref\": \"338836293305762887\",\n  \"ts\": 1659398320430000,\n  \"data\": {\n   \"a\": 6,\n   \"nested\": {\n    \"value\": 20\n   }\n  },\n  \"ttl\": null\n },\n {\n  \"ref\": \"338836293305764935\",\n  \"ts\": 1659398320430000,\n  \"data\": {\n   \"a\": 8,\n   \"nested\": {\n    \"value\": 30\n   }\n  },\n  \"ttl\": null\n }\n]"}}
{"type": "LOG", "log": {"level": "INFO", "message": "Ignored fields for stream deletions-data:"}}
{"type": "LOG", "log": {"level": "INFO", "message": "[]"}}
------------------------------ Captured log call -------------------------------
INFO     detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs1].txt:test_core.py:734 Actual records for stream deletions-data:
INFO     detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs1].txt:conftest.py:334 [
 {
  "ref": "338836293305762887",
  "ts": 1659398320430000,
  "data": {
   "a": 6,
   "nested": {
    "value": 20
   }
  },
  "ttl": null
 },
 {
  "ref": "338836293305764935",
  "ts": 1659398320430000,
  "data": {
   "a": 8,
   "nested": {
    "value": 30
   }
  },
  "ttl": null
 }
]
INFO     detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs1].txt:test_core.py:736 Expected records for stream deletions-data:
INFO     detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs1].txt:conftest.py:334 [
 {
  "ref": "338836293305763911",
  "ts": 1659398359360000,
  "deleted_at": "2022-08-01T23:59:19.360000"
 },
 {
  "ref": "338836293305761863",
  "ts": 1659398366330000,
  "deleted_at": "2022-08-01T23:59:26.330000"
 },
 {
  "ref": "338836293305765959",
  "ts": 1659398371330000,
  "deleted_at": "2022-08-01T23:59:31.330000"
 },
 {
  "ref": "338836293305762887",
  "ts": 1659398320430000,
  "data": {
   "a": 6,
   "nested": {
    "value": 20
   }
  },
  "ttl": null
 },
 {
  "ref": "338836293305764935",
  "ts": 1659398320430000,
  "data": {
   "a": 8,
   "nested": {
    "value": 30
   }
  },
  "ttl": null
 }
]
INFO     detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs1].txt:test_core.py:740 Ignored fields for stream deletions-data:
INFO     detailed_logger /test_input/acceptance_tests_logs/test_core.py__TestBasicRead__test_read[inputs1].txt:conftest.py:334 []
=============================== warnings summary ===============================
connector_acceptance_test/config.py:282: 36 warnings
test_core.py: 1 warning
  /airbyte/connector_acceptance_test/connector_acceptance_test/config.py:282: DeprecationWarning: The 'warn' function is deprecated, use 'warning' instead
    logging.warn("The acceptance-test-config.yml file is in a legacy format. Please migrate to the latest format.")

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
FAILED ../../test_input/test_core.py::TestBasicRead::test_read[inputs1] - Ass...
=========== 1 failed, 3 passed, 48 deselected, 37 warnings in 16.03s ===========
