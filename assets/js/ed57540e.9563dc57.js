"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[78691],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),g=o,h=d["".concat(c,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},56919:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const i={},a="Airbyte Protocol Versioning",l={unversionedId:"understanding-airbyte/airbyte-protocol-versioning",id:"understanding-airbyte/airbyte-protocol-versioning",title:"Airbyte Protocol Versioning",description:"Goal",source:"@site/../docs/understanding-airbyte/airbyte-protocol-versioning.md",sourceDirName:"understanding-airbyte",slug:"/understanding-airbyte/airbyte-protocol-versioning",permalink:"/understanding-airbyte/airbyte-protocol-versioning",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/understanding-airbyte/airbyte-protocol-versioning.md",tags:[],version:"current",frontMatter:{}},c={},s=[{value:"Goal",id:"goal",level:2},{value:"Versioning Scheme",id:"versioning-scheme",level:2},{value:"Development Guidelines",id:"development-guidelines",level:2},{value:"Safeguards",id:"safeguards",level:2},{value:"When upgrading Airbyte",id:"when-upgrading-airbyte",level:3},{value:"When upgrading a Connector",id:"when-upgrading-a-connector",level:3}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"airbyte-protocol-versioning"},"Airbyte Protocol Versioning"),(0,o.kt)("h2",{id:"goal"},"Goal"),(0,o.kt)("p",null,"The goal of this document is to define our approach to protocol changes."),(0,o.kt)("p",null,"We need a compromise between frequent breaking changes that are heavy on operations and infinite backward compatibility which is a burden from a software engineering point of view."),(0,o.kt)("h2",{id:"versioning-scheme"},"Versioning Scheme"),(0,o.kt)("p",null,"We are using a ",(0,o.kt)("inlineCode",{parentName:"p"},"<MAJOR>.<MINOR>.<PATCH>")," scheme for the Protocol Versioning. (see ",(0,o.kt)("a",{parentName:"p",href:"https://semver.org/"},"SemVer"),")."),(0,o.kt)("p",null,"We increment the"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"MAJOR version when you make incompatible protocol changes"),(0,o.kt)("li",{parentName:"ul"},"MINOR version when you add functionality in a backwards compatible manner"),(0,o.kt)("li",{parentName:"ul"},"PATCH version when you make backwards compatible bug fixes")),(0,o.kt)("h2",{id:"development-guidelines"},"Development Guidelines"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"We will continue to do our best effort to avoid introducing breaking changes to the Airbyte Protocol."),(0,o.kt)("li",{parentName:"ol"},"When introducing a new minor version of the Airbyte Protocol, new fields must come with sensible defaults for backward compatibility within the same major version, or be entirely optional."),(0,o.kt)("li",{parentName:"ol"},"When introducing a new major version of the Airbyte Protocol, all connectors from the previous major version will continue to work.  This requires the ability to \u201ctranslate\u201d messages between 1 major version of the Airbyte Protocol.")),(0,o.kt)("h2",{id:"safeguards"},"Safeguards"),(0,o.kt)("p",null,"To ensure continuous operation, we have a few safeguards to prevent breaking existing configuration through protocol version incompatibilities."),(0,o.kt)("h3",{id:"when-upgrading-airbyte"},"When upgrading Airbyte"),(0,o.kt)("p",null,"When removing support for older versions of the Protocol, there is a risk removing the support for a version that is currently used."),(0,o.kt)("p",null,"To mitigate this, as part of the pre-upgrade checks that happens in the ",(0,o.kt)("inlineCode",{parentName:"p"},"airbyte-bootloader"),", we verify that any connector currently part of an active connection will still be supported after the upgrade."),(0,o.kt)("p",null,"If any connector fails this check, we abort the upgrade and the ",(0,o.kt)("inlineCode",{parentName:"p"},"airbyte-bootloader")," logs contains a list of connectors to upgrade. Those connectors will need to be upgraded from the UI before the platform itself can be upgraded."),(0,o.kt)("h3",{id:"when-upgrading-a-connector"},"When upgrading a Connector"),(0,o.kt)("p",null,"When upgrading a Connector from the UI, we will verify that the Protocol Version is supported before finalizing the Connector upgrade."))}p.isMDXComponent=!0}}]);