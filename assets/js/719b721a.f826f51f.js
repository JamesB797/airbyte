"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[10217],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=r,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},82598:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={},i="Request Options",s={unversionedId:"connector-development/config-based/understanding-the-yaml-file/request-options",id:"connector-development/config-based/understanding-the-yaml-file/request-options",title:"Request Options",description:"The primary way to set request parameters and headers is to define them as key-value pairs using a RequestOptionsProvider.",source:"@site/../docs/connector-development/config-based/understanding-the-yaml-file/request-options.md",sourceDirName:"connector-development/config-based/understanding-the-yaml-file",slug:"/connector-development/config-based/understanding-the-yaml-file/request-options",permalink:"/connector-development/config-based/understanding-the-yaml-file/request-options",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/connector-development/config-based/understanding-the-yaml-file/request-options.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Requester",permalink:"/connector-development/config-based/understanding-the-yaml-file/requester"},next:{title:"Authentication",permalink:"/connector-development/config-based/understanding-the-yaml-file/authentication"}},p={},l=[{value:"Request Options Provider",id:"request-options-provider",level:2},{value:"Request Options",id:"request-options-1",level:3},{value:"Request Path",id:"request-path",level:3},{value:"Authenticators",id:"authenticators",level:2},{value:"Paginators",id:"paginators",level:2},{value:"Incremental syncs",id:"incremental-syncs",level:2},{value:"More readings",id:"more-readings",level:2}],u={toc:l};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"request-options"},"Request Options"),(0,r.kt)("p",null,"The primary way to set request parameters and headers is to define them as key-value pairs using a ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestOptionsProvider"),".\nOther components, such as an ",(0,r.kt)("inlineCode",{parentName:"p"},"Authenticator")," can also set additional request params or headers as needed."),(0,r.kt)("p",null,"Additionally, some stateful components use a ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestOption")," to configure the options and update the value. Example of such components are ",(0,r.kt)("a",{parentName:"p",href:"/connector-development/config-based/understanding-the-yaml-file/pagination"},"Paginators")," and ",(0,r.kt)("a",{parentName:"p",href:"/connector-development/config-based/understanding-the-yaml-file/incremental-syncs#DatetimeBasedCursor"},"DatetimeBasedCursors"),"."),(0,r.kt)("h2",{id:"request-options-provider"},"Request Options Provider"),(0,r.kt)("p",null,"The primary way to set request options is through the ",(0,r.kt)("inlineCode",{parentName:"p"},"Requester"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestOptionsProvider"),".\nThe options can be configured as key value pairs:"),(0,r.kt)("p",null,"Schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'  RequestOptionsProvider:\n    type: object\n    anyOf:\n      - "$ref": "#/definitions/InterpolatedRequestOptionsProvider"\n  InterpolatedRequestOptionsProvider:\n    type: object\n    additionalProperties: true\n    properties:\n      "$parameters":\n        "$ref": "#/definitions/$parameters"\n      request_parameters:\n        "$ref": "#/definitions/RequestInput"\n      request_headers:\n        "$ref": "#/definitions/RequestInput"\n      request_body_data:\n        "$ref": "#/definitions/RequestInput"\n      request_body_json:\n        "$ref": "#/definitions/RequestInput"\n')),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'requester:\n  type: HttpRequester\n  url_base: "https://api.exchangeratesapi.io/v1/"\n  http_method: "GET"\n  request_options_provider:\n    request_parameters:\n      k1: v1\n      k2: v2\n    request_headers:\n      header_key1: header_value1\n      header_key2: header_value2\n')),(0,r.kt)("p",null,"It is also possible to configure add a json-encoded body to outgoing requests."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'requester:\n  type: HttpRequester\n  url_base: "https://api.exchangeratesapi.io/v1/"\n  http_method: "GET"\n  request_options_provider:\n    request_body_json:\n      key: value\n')),(0,r.kt)("h3",{id:"request-options-1"},"Request Options"),(0,r.kt)("p",null,"Some components can add request options to the requests sent to the API endpoint."),(0,r.kt)("p",null,"Schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"  RequestOption:\n    description: A component that specifies the key field and where in the request a component's value should be inserted into.\n    type: object\n    required:\n      - type\n      - field_name\n      - inject_into\n    properties:\n      type:\n        type: string\n        enum: [RequestOption]\n      field_name:\n        type: string\n      inject_into:\n        enum:\n          - request_parameter\n          - header\n          - body_data\n          - body_json\n")),(0,r.kt)("h3",{id:"request-path"},"Request Path"),(0,r.kt)("p",null,"As an alternative to adding various options to the request being sent, some components can be configured to\nmodify the HTTP path of the API endpoint being accessed."),(0,r.kt)("p",null,"Schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"  RequestPath:\n    description: A component that specifies where in the request path a component's value should be inserted into.\n    type: object\n    required:\n      - type\n    properties:\n      type:\n        type: string\n        enum: [RequestPath]\n")),(0,r.kt)("h2",{id:"authenticators"},"Authenticators"),(0,r.kt)("p",null,"It is also possible for authenticators to set request parameters or headers as needed.\nFor instance, the ",(0,r.kt)("inlineCode",{parentName:"p"},"BearerAuthenticator")," will always set the ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," header."),(0,r.kt)("p",null,"More details on the various authenticators can be found in the ",(0,r.kt)("a",{parentName:"p",href:"/connector-development/config-based/understanding-the-yaml-file/authentication"},"authentication section"),"."),(0,r.kt)("h2",{id:"paginators"},"Paginators"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DefaultPaginator")," can optionally set request options through the ",(0,r.kt)("inlineCode",{parentName:"p"},"page_size_option")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"page_token_option"),".\nThe respective values can be set on the outgoing HTTP requests by specifying where it should be injected."),(0,r.kt)("p",null,'The following example will set the "page" request parameter value to the page to fetch, and the "page_size" request parameter to 5:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'paginator:\n  type: "DefaultPaginator"\n  page_size_option:\n    type: "RequestOption"\n    inject_into: request_parameter\n    field_name: page_size\n  pagination_strategy:\n    type: "PageIncrement"\n    page_size: 5\n  page_token:\n    type: "RequestOption"\n    inject_into: "request_parameter"\n    field_name: "page"\n')),(0,r.kt)("p",null,"More details on paginators can be found in the ",(0,r.kt)("a",{parentName:"p",href:"/connector-development/config-based/understanding-the-yaml-file/pagination"},"pagination section"),"."),(0,r.kt)("h2",{id:"incremental-syncs"},"Incremental syncs"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DatetimeBasedCursor")," can optionally set request options through the ",(0,r.kt)("inlineCode",{parentName:"p"},"start_time_option")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"end_time_option")," fields.\nThe respective values can be set on the outgoing HTTP requests by specifying where it should be injected."),(0,r.kt)("p",null,'The following example will set the "created',"[gte]",'" request parameter value to the start of the time window, and "created',"[lte]",'" to the end of the time window.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'incremental_sync:\n  type: DatetimeBasedCursor\n  start_datetime: "2021-02-01T00:00:00.000000+0000",\n  end_datetime: "2021-03-01T00:00:00.000000+0000",\n  step: "P1D"\n  start_time_option:\n    type: "RequestOption"\n    field_name: "created[gte]"\n    inject_into: "request_parameter"\n  end_time_option:\n    type: "RequestOption"\n    field_name: "created[lte]"\n    inject_into: "request_parameter"\n')),(0,r.kt)("p",null,"More details on incremental syncs can be found in the ",(0,r.kt)("a",{parentName:"p",href:"/connector-development/config-based/understanding-the-yaml-file/incremental-syncs"},"incremental syncs section"),"."),(0,r.kt)("h2",{id:"more-readings"},"More readings"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/connector-development/config-based/understanding-the-yaml-file/requester"},"Requester")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/connector-development/config-based/understanding-the-yaml-file/pagination"},"Pagination")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/connector-development/config-based/understanding-the-yaml-file/incremental-syncs"},"Incremental Syncs"))))}d.isMDXComponent=!0}}]);